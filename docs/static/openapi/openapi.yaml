openapi: 3.1.0
info:
  title: Singularity API
  description: "Welcome to the *Singularity*! \n\nThis documentation covers the ready-to-use\
    \ endpoints \nfor authentication, user management, and content management that\
    \ come pre-configured with \n*Singularity*.\n\n**Features at a Glance**:\n\n-\
    \ **Authentication & User Management:** Includes JWT auth with refresh tokens,\
    \ 2FA, \n  email verification, and role-based access control.\n  \n- **Data &\
    \ Content Management:** Endpoints for interacting with a content management \n\
    \  system that supports multi-language content, configurable tagging, and built-in\
    \ \n  access control. A prebuilt `Article` class is also provided.\n  \n- **Performance\
    \ & Security:** The API is built with a focus on production-readiness, \n  including\
    \ rate limiting and secret manager integration with automated key rotation.\n\n\
    This API is a foundation for building robust backend services, microservices,\
    \ or \nfull-stack applications.\n\n>**Note:** Some endpoints require explicit\
    \ configuration to be enabled."
  contact:
    name: Stereov
    url: https://stereov.io
    email: contact@stereov.io
  license:
    name: GPLv3 License
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
servers:
- url: https://singularity.stereov.io
  description: Demo server
- url: http://localhost:8000
  description: Local development server
tags:
- name: Authentication
  description: Operations related to user authentication.
- name: Two-Factor Authentication
  description: Operations related to two-factor authentication
- name: OAuth2
  description: Operations related to connecting and disconnecting identity providers
    to existing accounts.
- name: Sessions
  description: Operations related to session management.
- name: Roles
  description: Operations related to roles.
- name: Groups
  description: Operation related to group and member management.
- name: Managing Users
  description: Operations related to user management.
- name: Profile Management
  description: Operations related to user settings.
- name: Security
  description: Operations related to managing the servers security.
- name: Articles
  description: Operations related to articles
- name: File Metadata
  description: Operations related to metadata of files
- name: Content Management
  description: Operations related to management of content of all types.
- name: Invitations
  description: Operations related to invitations.
- name: Tags
  description: Operations related to tags.
paths:
  /api/auth/register:
    post:
      tags:
      - Authentication
      summary: Register
      description: "Registers a new user account with `email`, `password`, and `name`.\n\
        \n### Requirements\n- The `email` should be a valid email address (e.g., \"\
        test@example.com\")\n  that is not associated to an existing account.\n- The\
        \ `password` must be at least 8 characters long and include at least one uppercase\
        \ letter, \n  one lowercase letter, one number, and one special character\
        \ (!@#$%^&*()_+={}[]|\\:;'\"<>,.?/).\n\n**Optional session data:**\n- The\
        \ `session` object can be included in the request body.\n- Inside the `session`\
        \ object, you can provide the following optional fields:\n    - `browser`:\
        \ The name of the browser used (e.g., \"Chrome\", \"Firefox\").\n    - `os`:\
        \ The operating system of the device (e.g., \"Windows\", \"macOS\", \"Android\"\
        ).\n\nThis information helps users identify and manage authorized sessions,\
        \ improving overall account security.\n\n### Locale\n\nA locale can be specified\
        \ for this request. \nThis will be used for the email verification email.\n\
        You can learn more about email verification [here](https://singularity.stereov.io/docs/guides/auth/authentication#email-verification).\n\
        \nIf no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n\nIf successful, [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ and \n[`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\
        \ \nwill automatically be set as HTTP-only cookies.\nIf [header authentication](https://singularity.stereov.io/docs/guides/auth/authentication#header-authentication)\
        \ is enabled,\n[`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ and \n[`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\n\
        will be returned in the response body and can be used as \nbearer tokens in\
        \ the authorization header for upcoming requests."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/authentication#registering-users
      operationId: register
      parameters:
      - name: send-email
        in: query
        required: false
        schema:
          type: boolean
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUserRequest"
        required: true
      responses:
        "200":
          description: Registration successful. Returns user details and tokens if
            header authentication is enabled.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        "304":
          description: User is already authenticated. Authenticated session state
            has not changed since last request.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: '`email` or `password` are invalid.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: The email is already in use.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - {}
      - {}
  /api/auth/login:
    post:
      tags:
      - Authentication
      summary: Login
      description: "Authenticates a user with `email` and `password`.\n\nA [login\
        \ alert](https://singularity.stereov.io/docs/guides/auth/security-alerts#core-identity-alerts)\
        \ \nwill be sent to the user's email if this setting is enabled\nemail is\
        \ [enabled and configured correctly](https://singularity.stereov.io/docs/guides/email/configuration).\n\
        \n**Optional session data:**\n- The `session` object can be included in the\
        \ request body.\n- Inside the `session` object, you can provide the following\
        \ optional fields:\n    - `browser`: The name of the browser used (e.g., \"\
        Chrome\", \"Firefox\").\n    - `os`: The operating system of the device (e.g.,\
        \ \"Windows\", \"macOS\", \"Android\").\n\nThis information helps users identify\
        \ and manage authorized sessions, improving overall account security.\n\n\
        **2FA:**\n\nIf the user enabled 2FA, the user will not be authenticated immediately.\
        \ \nInstead, a [`TwoFactorAuthenticationToken`](https://singularity.stereov.io/docs/guides/auth/tokens#two-factor-authentication-token)\
        \ \nis set as HTTP-only cookie and returned in the response body\nif [header\
        \ authentication](https://singularity.stereov.io/docs/guides/auth/authentication#header-authentication)\
        \ is enabled.\n\nYou can complete the login through the endpoint [`POST /api/auth/2fa/login`](https://singularity.stereov.io/docs/api/complete-login).\n\
        \n### Locale\n\nA locale can be specified for this request. \nThis will be\
        \ used for the email 2FA code if this method is enabled for the user.\nYou\
        \ can learn more about 2FA through email [here](/docs/guides/auth/two-factor#email).\n\
        \nIf no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- If 2FA is disabled and the request is successful, \n  [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ \n  and [`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\
        \ \n  will automatically be set as HTTP-only cookies.\n  If [header authentication](https://singularity.stereov.io/docs/guides/auth/authentication#header-authentication)\
        \ is enabled,\n  [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ and \n  [`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\
        \ \n  will be returned in the response body and can be used as \n  bearer\
        \ tokens in the authorization header for upcoming requests."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/authentication#login
      operationId: login
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: Authentication successful. Returns tokens and user details.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "304":
          description: User is already authenticated. Authenticated session state
            has not changed since last request.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Trying to log in user that did not set up authentication using
            password.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Invalid credentials.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
  /api/auth/logout:
    post:
      tags:
      - Authentication
      summary: Logout
      description: "Invalidates the current session's [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)s\
        \ \nand [`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)s.\n\
        \n### Tokens\n- To perform the logout, an [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ is required.\n- If successful, all cookies related to the user's session\
        \ will be invalidated."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/authentication#logout
      operationId: logout
      responses:
        "200":
          description: Logout successful.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: Invalid AccessToken.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
  /api/auth/refresh:
    post:
      tags:
      - Authentication
      summary: Refresh Access Token
      description: "Request a new [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token).\n\
        \n### Tokens\n- Requires a valid [`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token).\n\
        - If successful, [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ and \n  [`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\
        \ \n  will automatically be set as HTTP-only cookies.\n  If [header authentication](https://singularity.stereov.io/docs/guides/auth/authentication#header-authentication)\
        \ is enabled,\n  [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ and \n  [`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\n\
        \  will be returned in the response body and can be used as \n  bearer tokens\
        \ in the authorization header for upcoming requests."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/authentication#refresh
      operationId: refreshAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionInfoRequest"
      responses:
        "200":
          description: Authentication successful. Returns tokens and user details.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RefreshTokenResponse"
        "401":
          description: Invalid RefreshToken.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - refreshTokenHeader: []
      - refreshTokenCookie: []
  /api/auth/step-up:
    post:
      tags:
      - Authentication
      summary: Step-Up
      description: "Requests [step-up authentification](https://singularity.stereov.io/docs/guides/auth/authentication#step-up).\
        \ \nThis re-authentication is required by critical endpoints.\n\n**2FA:**\n\
        \nIf the user enabled 2FA, the step-up will not be granted immediately. \n\
        Instead, a [`TwoFactorAuthenticationToken`](https://singularity.stereov.io/docs/guides/auth/tokens#two-factor-authentication-token)\
        \ \nis set as HTTP-only cookie and returned in the response body\nif [header\
        \ authentication](https://singularity.stereov.io/docs/guides/auth/authentication#header-authentication)\
        \ is enabled.\n\nYou can complete the step-up through the endpoint [`POST\
        \ /api/auth/2fa/step-up`](https://singularity.stereov.io/docs/api/complete-step-up).\n\
        \n**Request Body:**\n\nWhen requesting a step-up for a [`GUEST`](https://singularity.stereov.io/docs/guides/auth/roles#guests)\n\
        there is no way to authenticate the user.\nTherefore, no request body is required\
        \ in this case.\n\nIf you request a step-up for a regular [`USER`](https://singularity.stereov.io/docs/guides/auth/roles#users),\n\
        it will result in a `400 - BAD REQUEST`.\n\n### Locale\n\nA locale can be\
        \ specified for this request. \nThis will be used for the email 2FA code if\
        \ this method is enabled for the user.\nYou can learn more about 2FA through\
        \ email [here](/docs/guides/auth/two-factor#email).\n\nIf no locale is specified,\
        \ the applications default locale will be used.\nYou can learn more about\
        \ configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- Requires a valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token).\n\
        - If 2FA is disabled and the request is successful, [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)\n\
        \  will automatically be set as HTTP-only cookie.\n  If [header authentication](https://singularity.stereov.io/docs/guides/auth/authentication#header-authentication)\
        \ is enabled,\n  the [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)\n\
        \  will be returned in the response body and can be used to authorized critical\
        \ requests."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/authentication#step-up
      operationId: stepUp
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StepUpRequest"
      responses:
        "200":
          description: Logout successful.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/StepUpResponse"
        "400":
          description: Trying to request step-up for user that authenticated only
            via OAuth2 providers or missing request body for authenticated users.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Invalid credentials.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
  /api/auth/status:
    get:
      tags:
      - Authentication
      summary: Get Authentication Status
      description: |-
        Get detailed information about the current status authentication status of the user.

        This endpoint is primarily designed for cookie-based authentication.
        *Singularity* sets HTTP-only cookies by default which cannot be accessed via JavaScript.
        Therefore, you can use this endpoint to request if valid tokens are set.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/authentication#status
      operationId: getAuthenticationStatus
      responses:
        "200":
          description: The current user's authentication status.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthenticationStatusResponse"
        "404":
          description: The user contained in the TwoFactorAuthenticationToken does
            not exist.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        stepUpTokenHeader: []
        twoFactorAuthenticationTokenHeader: []
      - accessTokenCookie: []
        stepUpTokenCookie: []
        twoFactorAuthenticationTokenCookie: []
  /api/auth/password/reset-request:
    post:
      tags:
      - Authentication
      summary: Send Password Reset Email
      description: "Send a password reset request email to the user's email.\nYou\
        \ can learn more about the password reset [here](https://singularity.stereov.io/docs/guides/auth/authentication#password-reset).\n\
        \nWhen request a password reset through this endpoint\nand [email is enabled\
        \ in your application](https://singularity.stereov.io/docs/guides/email/configuration)\
        \ \nan email containing a link is sent to the user's email address.\nThis\
        \ link should point to the frontend of your application.\nYour frontend should\
        \ extract the token from the URL and send it to this endpoint with the\ntoken\
        \ as request parameter.\nYou can find more information about this [here](https://singularity.stereov.io/docs/guides/auth/authentication#password-reset).\n\
        \nYou can perform the reset using the token through the endpoint [`POST /api/auth/password/reset`](https://singularity.stereov.io/docs/api/reset-password).\n\
        \n>**Note:** If email is disabled, there is no way to reset the password.\n\
        \n### Locale\n\nA locale can be specified for this request. \nThe email will\
        \ be sent in the specified locale.\nYou can learn more about locale in emails\
        \ [here](https://singularity.stereov.io/docs/guides/email/templates).\n\n\
        If no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n>**Note:** After each email, a cooldown will be started.\n>You can check\
        \ the status of the cooldown through the endpoint [`GET /api/auth/password/reset/cooldown`](https://singularity.stereov.io/docs/api/get-remaining-password-reset-cooldown).\n\
        >When the cooldown is active, no new email can be sent.\n>The cooldown can\
        \ be configured [here](https://singularity.stereov.io/docs/guides/email/configuration)."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/authentication#password-reset
      operationId: sendPasswordResetEmail
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendPasswordResetRequest"
        required: true
      responses:
        "200":
          description: The number of seconds the user needs to wait to send a new
            email.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MailSendResponse"
        "429":
          description: Cooldown is active. You have to wait until you can send another
            email.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "503":
          description: Email is disabled in your application.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - {}
      - {}
  /api/auth/password/reset:
    post:
      tags:
      - Authentication
      summary: Reset Password
      description: "Perform a password reset using a `token` you obtained the user\
        \ received in a password reset email.\nYou can learn more about the password\
        \ reset [here](https://singularity.stereov.io/docs/guides/auth/authentication#password-reset).\n\
        \nWhen request a password reset through [`POST /api/auth/password/reset-request`](https://singularity.stereov.io/docs/api/send-password-reset-email)\
        \ \nand [email is enabled in your application](https://singularity.stereov.io/docs/guides/email/configuration)\
        \ \nan email containing a link is sent to the user's email address.\nThis\
        \ link should point to the frontend of your application.\nYour frontend should\
        \ extract the token from the URL and send it to this endpoint with the\ntoken\
        \ as request parameter.\nYou can find more information about this [here](https://singularity.stereov.io/docs/guides/auth/authentication#password-reset).\n\
        \nIf successful, the user can log in using the new password afterwards.\n\n\
        You can resend this email through the endpoint [`POST /api/auth/password/reset-request`](https://singularity.stereov.io/docs/api/send-password-reset-email).\n\
        \n### Locale\n\nA locale can be specified for this request. \nThe email will\
        \ be sent in the specified locale.\nYou can learn more about locale in emails\
        \ [here](https://singularity.stereov.io/docs/guides/email/templates).\n\n\
        If no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n>**Note:** If email is disabled, there is no way to reset the password."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/authentication#password-reset
      operationId: resetPassword
      parameters:
      - name: token
        in: query
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
        required: true
      responses:
        "200":
          description: Updated user information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Trying to request a password reset for a user that only authenticated\
            \ via OAuth2 providers or a [`GUEST`](https://singularity.stereov.io/docs/guides/auth/roles#guests)."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: No password identity is set up for the user.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - {}
      - {}
  /api/auth/password/reset/cooldown:
    get:
      tags:
      - Authentication
      summary: Get Remaining Password Reset Cooldown
      description: |-
        Get the remaining time in seconds until you can send another password reset request.

        You can find more information about a password reset [here](https://singularity.stereov.io/docs/guides/auth/authentication#password-reset).
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/authentication#password-reset
      operationId: getRemainingPasswordResetCooldown
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The remaining cooldown.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MailCooldownResponse"
      security:
      - {}
      - {}
  /api/auth/email/verification/send:
    post:
      tags:
      - Authentication
      summary: Send Email Verification Email
      description: "Send an email verification email to the user.\n\nThis endpoint\
        \ is for **resending** the verification email only.\nWhen registering a user\
        \ and [email is enabled in your application](https://singularity.stereov.io/docs/guides/email/configuration)\n\
        an email containing a link is automatically sent to the user's email address.\n\
        This link should point to the frontend of your application.\nYou can find\
        \ more information about this [here](https://singularity.stereov.io/docs/guides/auth/authentication#email-verification).\n\
        Your frontend should extract the token from the URL and send it to this endpoint\
        \ with the\ntoken as request parameter.\n\nYou can perform the verification\
        \ using the token through the endpoint [`POST /api/auth/email/verification`](https://singularity.stereov.io/docs/api/verify-email).\n\
        \n>**Note:** If email is disabled, there is no way to verify a user's email\
        \ address.\n\n### Locale\n\nA locale can be specified for this request. \n\
        The email will be sent in the specified locale.\nYou can learn more about\
        \ locale in emails [here](https://singularity.stereov.io/docs/guides/email/templates).\n\
        \nIf no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ is required.\n\n>**Note:** After each email, a cooldown will be started.\n\
        >You can check the status of the cooldown through the endpoint [`GET /api/auth/email/verification/cooldown`](https://singularity.stereov.io/docs/api/get-remaining-email-verification-cooldown).\n\
        >When the cooldown is active, no new verification email can be sent.\n>The\
        \ cooldown can be configured [here](https://singularity.stereov.io/docs/guides/email/configuration)."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/docs/auth/authentication#email-verification
      operationId: sendEmailVerificationEmail
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: The number of seconds the user needs to wait before sending
            a new email.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MailSendResponse"
        "304":
          description: Trying to send a verification email for verified account.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: "Trying to send a verification email for [`GUEST`](https://singularity.stereov.io/docs/guides/auth/roles#guests)."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: AccessToken is invalid or expired.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: Cooldown is active. You have to wait until you can send another
            email.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "503":
          description: Email is disabled in your application.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
  /api/auth/email/verification:
    post:
      tags:
      - Authentication
      summary: Verify Email
      description: "Verify the user's email address using the `token` the user received\
        \ a email verification email.\nYou can find more information about this [here](https://singularity.stereov.io/docs/guides/auth/authentication#email-verification).\n\
        \nWhen registering a user and [email is enabled in your application](https://singularity.stereov.io/docs/guides/email/configuration)\n\
        an email containing a link is sent to the user's email address.\nThis link\
        \ should point to the frontend of your application.\nYour frontend should\
        \ extract the token from the URL and send it to this endpoint with the\ntoken\
        \ as request parameter.\nYou can find more information about this [here](https://singularity.stereov.io/docs/guides/auth/authentication#email-verification).\n\
        \nYou can resend this email through the endpoint [`POST /api/auth/email/verification/send`](https://singularity.stereov.io/docs/api/send-email-verification-email).\n\
        \n### Locale\n\nA locale can be specified for this request. \nThe email will\
        \ be sent in the specified locale.\nYou can learn more about locale in emails\
        \ [here](https://singularity.stereov.io/docs/guides/email/templates).\n\n\
        If no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n>**Note:** If email is disabled, there is no way to verify a user's email\
        \ address."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/docs/auth/authentication#email-verification
      operationId: verifyEmail
      parameters:
      - name: token
        in: query
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Updated user information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "304":
          description: Trying to verify an email for verified account.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: "Trying to verify an email for [`GUEST`](https://singularity.stereov.io/docs/guides/auth/roles#guests)."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - {}
      - {}
  /api/auth/email/verification/cooldown:
    get:
      tags:
      - Authentication
      summary: Get Remaining Email Verification Cooldown
      description: |-
        Get the remaining time in seconds until you can send another email verification email.

        You can find more information about email verification [here](https://singularity.stereov.io/docs/guides/auth/authentication#email-verification).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token) is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/docs/auth/authentication#email-verification
      operationId: getRemainingEmailVerificationCooldown
      responses:
        "200":
          description: The remaining cooldown.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MailCooldownResponse"
        "401":
          description: AccessToken is invalid or expired.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
  /api/auth/2fa/login:
    post:
      tags:
      - Two-Factor Authentication
      summary: Complete Login
      description: "Complete second factor for login.\n\nYou can learn more about\
        \ the login flow [here](https://singularity.stereov.io/docs/guides/auth/authentication#login).\n\
        \n### Requirements\n- User authenticated using their password through [`POST\
        \ /api/auth/login`](https://singularity.stereov.io/docs/api/login).\n- At\
        \ least one of [email](https://singularity.stereov.io/docs/guides/auth/two-factor#email)\
        \ or [TOTP](https://singularity.stereov.io/docs/guides/auth/two-factor#totp)\
        \ as 2FA methods should be enabled.\n- An `email` or `totp` 2FA code is present\
        \ for an enabled 2FA method.\n  Check out [email](https://singularity.stereov.io/docs/guides/auth/two-factor#email)\
        \ and [TOTP](https://singularity.stereov.io/docs/guides/auth/two-factor#totp)\n\
        \  to learn how to retrieve a 2FA code.\n  \n**Optional session data:**\n\
        - The `session` object can be included in the request body.\n- Inside the\
        \ `session` object, you can provide the following optional fields:\n    -\
        \ `browser`: The name of the browser used (e.g., \"Chrome\", \"Firefox\").\n\
        \    - `os`: The operating system of the device (e.g., \"Windows\", \"macOS\"\
        , \"Android\").\n\nThis information helps users identify and manage authorized\
        \ sessions, improving overall account security.\n\n### Tokens\n- A valid [`TwoFactorAuthenticationToken`](https://singularity.stereov.io/docs/guides/auth/tokens#two-factor-authentication-token)\n\
        \  is required. This token will be set automatically as HTTP-only cookie through\
        \ [`POST /api/auth/login`](https://singularity.stereov.io/docs/api/login)\n\
        \  or can be retrieved from the response and set as header manually if [header\
        \ authentication](https://singularity.stereov.io/docs/guides/authentication#header-authentication)\
        \ \n  is enabled.\n- If this action is successful, [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ and \n  [`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\
        \ \n  will automatically be set as HTTP-only cookies.\n  If [header authentication](https://singularity.stereov.io/docs/guides/auth/authentication#header-authentication)\
        \ is enabled,\n  [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ and \n  [`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\n\
        \  will be returned in the response body and can be used as \n  bearer tokens\
        \ in the authorization header for upcoming requests."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/two-factor
      operationId: completeLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteLoginRequest"
        required: true
      responses:
        "200":
          description: Information about the user and the tokens if header authentication
            is enabled.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "304":
          description: User is already authenticated.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: No 2FA code for an enabled 2FA method was provided or 2FA is
            disabled.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Invalid or expired `TwoFactorAuthenticationToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - twoFactorAuthenticationTokenHeader: []
      - twoFactorAuthenticationTokenCookie: []
  /api/auth/2fa/step-up:
    post:
      tags:
      - Two-Factor Authentication
      summary: Complete Step-Up
      description: |-
        Perform second factor for step-up.

        You can learn more about the step-up flow [here](https://singularity.stereov.io/docs/guides/auth/authentication#step-up).

        ### Requirements
        - User authenticated using their password through [`POST /api/auth/step-up`](https://singularity.stereov.io/docs/api/step-up).
        - At least one of [email](https://singularity.stereov.io/docs/guides/auth/two-factor#email) or [TOTP](https://singularity.stereov.io/docs/guides/auth/two-factor#totp) as 2FA methods should be enabled.
        - An `email` or `totp` 2FA code is present for an enabled 2FA method.
          Check out [email](https://singularity.stereov.io/docs/guides/auth/two-factor#email) and [TOTP](https://singularity.stereov.io/docs/guides/auth/two-factor#totp)
          to learn how to retrieve a 2FA code.

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token) is required.
        - A valid [`TwoFactorAuthenticationToken`](https://singularity.stereov.io/docs/guides/auth/tokens#two-factor-authentication-token)
          is required. This token should match user and session contained in the `AccessToken`.
        - If 2FA is disabled and the request is successful, [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)
          will automatically be set as HTTP-only cookie.
          If [header authentication](https://singularity.stereov.io/docs/guides/auth/authentication#header-authentication) is enabled,
          the [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)
          will be returned in the response body and can be used to authorized critical requests.
      externalDocs:
        url: https://singularity.stereov.io/docs/auth/two-factor
      operationId: completeStepUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteStepUpRequest"
        required: true
      responses:
        "200":
          description: The token if header authentication is enabled.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/StepUpResponse"
        "400":
          description: No 2FA code for an enabled 2FA method was provided or 2FA is
            disabled.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Invalid or expired `TwoFactorAuthenticationToken` or invalid
            or expired 2FA code.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        twoFactorAuthenticationTokenHeader: []
      - accessTokenCookie: []
        twoFactorAuthenticationTokenCookie: []
  /api/auth/2fa/preferred-method:
    post:
      tags:
      - Two-Factor Authentication
      summary: Change Preferred 2FA Method
      description: "Change the preferred 2FA method.\n\nYou can learn more about 2FA\
        \ methods [here](https://singularity.stereov.io/docs/guides/auth/two-factor).\n\
        \n### Requirements\n- The user can authenticate using password. 2FA will not\
        \ work with OAuth2. \n  The OAuth2 provider will validate the second factor\
        \ if the user enabled it for the provider.\n- At least one of [email](https://singularity.stereov.io/docs/guides/auth/two-factor#email)\
        \ or [TOTP](https://singularity.stereov.io/docs/guides/auth/two-factor#totp)\
        \ as 2FA methods should be enabled.\n\n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ is required.\n- A valid [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)\n\
        \  is required. This token should match user and session contained in the\
        \ `AccessToken`."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/two-factor#changing-the-preferred-method
      operationId: changePreferredTwoFactorMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePreferredTwoFactorMethodRequest"
        required: true
      responses:
        "200":
          description: Updated user information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: This 2FA method is disabled or the user did not set up authentication
            via password.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: '`AccessToken` or `StepUpToken` are invalid or expired or invalid
            or expired 2FA code.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        stepUpTokenHeader: []
      - accessTokenCookie: []
        stepUpTokenCookie: []
  /api/auth/2fa/totp/setup:
    get:
      tags:
      - Two-Factor Authentication
      summary: Get TOTP Setup Details
      description: "Get a TOTP secret, recovery codes and a TOTP URL.\nThis is the\
        \ first step to enabling TOTP as 2FA method.\nYou can learn more about this\
        \ [here](https://singularity.stereov.io/docs/guides/auth/two-factor#setup).\n\
        \nThe user needs to save the recovery codes and use the URL or the secret\
        \ to set up 2FA in their 2FA app.\n\nThis secret will be stored inside the\
        \ `token` contained in the response.\nThis `token` is required to enable TOTP.\n\
        Performing this request will not change the user's state in the database.\n\
        Therefore, the token is the single point of truth for validation.\nEvery request\
        \ will generate a new TOTP secret, new recovery codes and a new TOTP URL.\n\
        \nThe setup can be completed through the endpoint \n[`POST /api/auth/2fa/totp/setup`](https://singularity.stereov.io/docs/api/enable-totp-as-two-factor-method)\n\
        using the `token` and a 2FA code from an authenticator app.\n\n### Requirements\n\
        - The user can authenticate using password. 2FA will not work with OAuth2.\
        \ \n  The OAuth2 provider will validate the second factor if the user enabled\
        \ it for the provider.\n  \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ is required.\n- A valid [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)\n\
        \  is required. This token should match user and session contained in the\
        \ `AccessToken`."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/two-factor#setup
      operationId: getTotpSetupDetails
      responses:
        "200":
          description: "The TOTP secret, recovery codes, TOTP URL and setup token."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TwoFactorSetupResponse"
        "304":
          description: User already enabled TOTP.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: 2FA cannot be enabled for users who didn't configure authentication
            using a password.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: '`AccessToken` or `StepUpToken` is invalid.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        stepUpTokenHeader: []
      - accessTokenCookie: []
        stepUpTokenCookie: []
    post:
      tags:
      - Two-Factor Authentication
      summary: Enable TOTP as 2FA Method
      description: "Complete the TOTP setup `token` from [`GET /api/auth/2fa/setup`](https://singularity.stereov.io/docs/api/get-totp-setup-details)\
        \ \nand a TOTP code from an authenticator app.\n\nYou can learn more about\
        \ this [here](https://singularity.stereov.io/docs/guides/auth/two-factor#setup).\n\
        \nA [security alert](https://singularity.stereov.io/docs/guides/auth/security-alerts#2fa-specific-alerts)\n\
        will be sent to the user's email if this setting is enabled and\nemail is\
        \ [enabled and configured correctly](https://singularity.stereov.io/docs/guides/email/configuration).\n\
        \n### Requirements\n- The user can authenticate using password. 2FA will not\
        \ work with OAuth2. \n  The OAuth2 provider will validate the second factor\
        \ if the user enabled it for the provider.\n  \n### Locale\n\nA locale can\
        \ be specified for this request. \nThe email will be sent in the specified\
        \ locale.\nYou can learn more about locale in emails [here](https://singularity.stereov.io/docs/guides/email/templates).\n\
        \nIf no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ is required.\n- A valid [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)\n\
        \  is required. This token should match user and session contained in the\
        \ `AccessToken`."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/two-factor#setup
      operationId: enableTotpAsTwoFactorMethod
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TwoFactorVerifySetupRequest"
        required: true
      responses:
        "200":
          description: Success.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TwoFactorSetupResponse"
        "304":
          description: The user already enabled TOTP.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: 2FA cannot be enabled for users who didn't configure authentication
            using a password.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: '`AccessToken` or `StepUpToken` is invalid.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        stepUpTokenHeader: []
      - accessTokenCookie: []
        stepUpTokenCookie: []
  /api/auth/2fa/totp:
    delete:
      tags:
      - Two-Factor Authentication
      summary: Disable TOTP as 2FA Method
      description: "Disable TOTP for the current user.\n\nA [security alert](https://singularity.stereov.io/docs/guides/auth/security-alerts#2fa-specific-alerts)\n\
        will be sent to the user's email if this setting is enabled and\nemail is\
        \ [enabled and configured correctly](https://singularity.stereov.io/docs/guides/email/configuration).\n\
        \nYou can learn more about this [here](https://singularity.stereov.io/docs/guides/auth/two-factor#setup).\n\
        \n### Locale\n\nA locale can be specified for this request. \nThe email will\
        \ be sent in the specified locale.\nYou can learn more about locale in emails\
        \ [here](https://singularity.stereov.io/docs/guides/email/templates).\n\n\
        If no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ is required.\n- A valid [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)\n\
        \  is required. This token should match user and session contained in the\
        \ `AccessToken`."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/two-factor#disable
      operationId: disableTotpAsTwoFactorMethod
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Success.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: This method is already disabled for the user.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Invalid or expired `AccessToken` or `StepUpToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        stepUpTokenHeader: []
      - accessTokenCookie: []
        stepUpTokenCookie: []
  /api/auth/2fa/totp/recover:
    post:
      tags:
      - Two-Factor Authentication
      summary: Recover From TOTP
      description: "Recover the user if they lost access to their 2FA device using\
        \ a recovery `code`.\nEach `code` is only valid once.\n\nYou can learn more\
        \ about recovery for TOTP [here](https://singularity.stereov.io/docs/guides/auth/two-factor#recovery).\n\
        \n### Requirements\n- The user can authenticate using password.\n- The user\
        \ enabled TOTP as 2FA method.\n\n**Optional session data:**\n- The `session`\
        \ object can be included in the request body.\n- Inside the `session` object,\
        \ you can provide the following optional fields:\n    - `browser`: The name\
        \ of the browser used (e.g., \"Chrome\", \"Firefox\").\n    - `os`: The operating\
        \ system of the device (e.g., \"Windows\", \"macOS\", \"Android\").\n\n###\
        \ Tokens\n- A valid [`TwoFactorAuthenticationToken`](https://singularity.stereov.io/docs/guides/auth/tokens#two-factor-authentication-token)\n\
        \  is required. This token will be set automatically as HTTP-only cookie through\
        \ \n  [`POST /api/auth/login`](https://singularity.stereov.io/docs/api/login)\
        \ or\n  [`POST /api/auth/step-up`](https://singularity.stereov.io/docs/api/step-up)\n\
        \  or can be retrieved from any of those endpoints' response and set as header\
        \ manually if [header authentication](https://singularity.stereov.io/docs/guides/authentication#header-authentication)\
        \ \n  is enabled.\n- If this action is successful, [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token),\
        \ \n  [`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\
        \ and\n  [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)\n\
        \  will automatically be set as HTTP-only cookies.\n  \n  If [header authentication](https://singularity.stereov.io/docs/guides/auth/authentication#header-authentication)\
        \ is enabled,\n  [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token),\
        \ \n  [`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\
        \ and\n  [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)\n\
        \  will be returned in the response body and can be used in the authorization\
        \ header for upcoming requests."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/two-factor#recovery
      operationId: recoverFromTotp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TotpRecoveryRequest"
        required: true
      responses:
        "200":
          description: "Recovery successful. If header authentication is enabled,\
            \ the response will contain all tokens."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TwoFactorRecoveryResponse"
        "400":
          description: TOTP is disabled.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Wrong code or invalid or expired `TwoFactorAuthenticationToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - twoFactorAuthenticationTokenHeader: []
      - twoFactorAuthenticationTokenCookie: []
  /api/auth/2fa/email/send:
    post:
      tags:
      - Two-Factor Authentication
      summary: Send Email 2FA Code
      description: "Send an email containing a 2FA code to the user.\n\nLearn more\
        \ about email as 2FA method [here](https://singularity.stereov.io/docs/guides/auth/two-factor#email).\n\
        \nThis endpoint is used to send a 2FA email code for enabling email as a 2FA\
        \ method\nand to resend 2FA codes when authenticating user that already enabled\
        \ email as a 2FA method.\n\n>**Note:** Each request will generate a new code\
        \ and invalidate all old codes.\n\nIf email is the preferred 2FA method, an\
        \ email will be sent automatically after successful authentication\nwith the\
        \ user's password.\nYou can learn more about preferred 2FA methods [here](https://singularity.stereov.io/docs/guides/auth/two-factor#changing-the-preferred-method).\n\
        \n### Requirements\n- The user can authenticate using password. 2FA will not\
        \ work with OAuth2. \n  The OAuth2 provider will validate the second factor\
        \ if the user enabled it for the provider.\n  \n### Locale\n\nA locale can\
        \ be specified for this request. \nThe email will be sent in the specified\
        \ locale.\nYou can learn more about locale in emails [here](https://singularity.stereov.io/docs/guides/email/templates).\n\
        \nIf no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n\nThere are two options: \n1. If email as a 2FA method is disabled,\
        \ you can request an email with a token to enable it.\n   In this case you\
        \ need a valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token).\n\
        \   If email is already enabled, this request will return `400 - BAD REQUEST`.\n\
        2. If email as 2FA method is already enabled, you can request a 2FA email\
        \ code with a valid\n   [`TwoFactorAuthenticationToken`](https://singularity.stereov.io/docs/guides/auth/tokens#two-factor-authentication-token).\n\
        \   \n>**Note:** After each email, a cooldown will be started.\n>When the\
        \ cooldown is active, no new email can be sent.\n>You can request the remaining\
        \ cooldown throw the endpoint \n>[`GET /api/auth/2fa/email/cooldown`](https://singularity.stereov.io/docs/api/get-remaining-email-two-factor-cooldown).\n\
        >The cooldown can be configured [here](https://singularity.stereov.io/docs/guides/email/configuration)."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/two-factor#sending-a-2fa-code-via-email
      operationId: sendEmailTwoFactorCode
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Success.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: 2FA cannot be sent for users who didn't configure authentication
            using a password.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Invalid or expired `AccessToken` or `TwoFactorAuthenticationToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: Cannot send email while cooldown is active.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "503":
          description: Email is disabled in your application.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
      - twoFactorAuthenticationTokenHeader: []
      - twoFactorAuthenticationTokenCookie: []
  /api/auth/2fa/email/enable:
    post:
      tags:
      - Two-Factor Authentication
      summary: Enable Email as 2FA Method
      description: "Enable email as 2FA method.\n\nLearn more about email as 2FA method\
        \ [here](https://singularity.stereov.io/docs/guides/auth/two-factor#email).\n\
        \nA [security alert](https://singularity.stereov.io/docs/guides/auth/security-alerts#2fa-specific-alerts)\n\
        will be sent to the user's email if this setting is enabled and\nemail is\
        \ [enabled and configured correctly](https://singularity.stereov.io/docs/guides/email/configuration).\n\
        \n### Requirements\n- The user can authenticate using password. 2FA will not\
        \ work with OAuth2. \n  The OAuth2 provider will validate the second factor\
        \ if the user enabled it for the provider.\n\n>**Note:** If [email is enabled](https://singularity.stereov.io/docs/guides/email/configuration)\
        \ in your application,\n>email is 2FA method will be enabled by default for\
        \ every user that registers with a password.\n\n### Locale\n\nA locale can\
        \ be specified for this request. \nThe email will be sent in the specified\
        \ locale.\nYou can learn more about locale in emails [here](https://singularity.stereov.io/docs/guides/email/templates).\n\
        \nIf no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ is required.\n- A valid [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)\n\
        \  is required. This token should match user and session contained in the\
        \ `AccessToken`."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/two-factor#setup-1
      operationId: enableEmailAsTwoFactorMethod
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableEmailTwoFactorMethodRequest"
        required: true
      responses:
        "200":
          description: Updated user information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "304":
          description: This method is already enabled for the user.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: 2FA cannot be enabled for users who didn't configure authentication
            using a password.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Invalid `AccessToken` or `StepUpToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        stepUpTokenHeader: []
      - accessTokenCookie: []
        stepUpTokenCookie: []
  /api/auth/2fa/email:
    delete:
      tags:
      - Two-Factor Authentication
      summary: Disable Email as 2FA Method
      description: "Disable email as 2FA method.\n\nLearn more about email as 2FA\
        \ method [here](https://singularity.stereov.io/docs/guides/auth/two-factor#email).\n\
        \nA [security alert](https://singularity.stereov.io/docs/guides/auth/security-alerts#2fa-specific-alerts)\n\
        will be sent to the user's email if this setting is enabled and\nemail is\
        \ [enabled and configured correctly](https://singularity.stereov.io/docs/guides/email/configuration).\n\
        \n### Locale\n\nA locale can be specified for this request. \nThe email will\
        \ be sent in the specified locale.\nYou can learn more about locale in emails\
        \ [here](https://singularity.stereov.io/docs/guides/email/templates).\n\n\
        If no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ is required.\n- A valid [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)\n\
        \  is required. This token should match user and session contained in the\
        \ `AccessToken`."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/two-factor#disable-1
      operationId: disableEmailAsTwoFactorMethod
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Updated user information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: This method is already disabled for the user.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Invalid `AccessToken` or `RefreshToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        stepUpTokenHeader: []
      - accessTokenCookie: []
        stepUpTokenCookie: []
  /api/auth/2fa/email/cooldown:
    get:
      tags:
      - Two-Factor Authentication
      summary: Get Remaining Email 2FA Code Cooldown
      description: |-
        Get the remaining time in seconds until you can send another email containing a 2FA code.

        Learn more about email as 2FA method [here](https://singularity.stereov.io/docs/guides/auth/two-factor#email).

        ### Tokens
        - Requires either a valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          or [`TwoFactorAuthenticationToken`](https://singularity.stereov.io/docs/guides/auth/tokens#two-factor-authentication-token).
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/two-factor#sending-a-2fa-code-via-email
      operationId: getRemainingEmailTwoFactorCooldown
      responses:
        "200":
          description: The remaining cooldown.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MailCooldownResponse"
        "401":
          description: Invalid or expired `AccessToken` or `TwoFactorAuthenticationToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
      - twoFactorAuthenticationTokenHeader: []
      - twoFactorAuthenticationTokenCookie: []
  /api/auth/providers:
    get:
      tags:
      - OAuth2
      summary: Get Identity Providers
      description: |-
        Get a list of connected identity providers for the current user.

        Users can connect multiple OAuth2 providers to their account.
        You can learn more about this [here](https://singularity.stereov.io/docs/guides/auth/oauth2).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token) is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/oauth2#getting-connected-providers
      operationId: getIdentityProviders
      responses:
        "200":
          description: The list of identity providers.
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IdentityProviderResponse"
        "401":
          description: Invalid `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
  /api/auth/providers/{provider}:
    delete:
      tags:
      - OAuth2
      summary: Delete Identity Provider
      description: |-
        Delete an identity provider from the connected identity providers of the current user.

        ### Requirements
        - You are not allowed to delete the password identity or the only existing identity.

        A [security alert](https://singularity.stereov.io/docs/guides/auth/security-alerts#oauth2-specific-alerts)
        will be sent to the user's email if this setting is enabled and
        email is [enabled and configured correctly](https://singularity.stereov.io/docs/guides/email/configuration).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token) is required.
        - A valid [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)
          is required. This token should match user and session contained in the `AccessToken`.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/oauth2#disconnecting-an-oauth2-provider
      operationId: deleteIdentityProvider
      parameters:
      - name: provider
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Success.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: Deleting the password identity or the only registered identity
            is forbidden.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Invalid `AccessToken` or `StepUpToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: The requested provider is not connected.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        stepUpTokenHeader: []
      - accessTokenCookie: []
        stepUpTokenCookie: []
  /api/auth/providers/password:
    post:
      tags:
      - OAuth2
      summary: Add Password Authentication
      description: |-
        Create a new identity provider for the current user that allows the user to login with a password.

        You can learn more about this [here](https://singularity.stereov.io/docs/guides/auth/oauth2#adding-password-authentication).

        ### Requirements
        - The user registered via an OAuth2 provider.

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token) is required.
        - A valid [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)
          is required. This token should match user and session contained in the `AccessToken`.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/oauth2#adding-password-authentication
      operationId: addPasswordAuthentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddPasswordAuthenticationRequest"
        required: true
      responses:
        "200":
          description: Success.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "304":
          description: User already created a password identity.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Guests are not allowed to add a password identity this way.
            They need to be converted to users.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Invalid `AccessToken` or `StepUpToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        stepUpTokenHeader: []
      - accessTokenCookie: []
        stepUpTokenCookie: []
  /api/auth/providers/oauth2/token:
    post:
      tags:
      - OAuth2
      summary: Generate OAuth2ProviderConnectionToken
      description: "Generate an OAuth2ProviderConnectionToken that enables the user\
        \ to connect new OAuth2 providers.\n\nYou can learn more about connecting\
        \ OAuth2 providers to existing accounts \n[here](https://singularity.stereov.io/docs/guides/auth/oauth2#connecting-an-oauth2-provider-to-an-existing-account).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ is required.\n- A valid [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)\n\
        \  is required. This token should match user and session contained in the\
        \ `AccessToken`."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/oauth2#connecting-an-oauth2-provider-to-an-existing-account
      operationId: generateOAuth2ProviderConnectionToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OAuth2ProviderConnectionRequest"
        required: true
      responses:
        "200":
          description: Returns the token if header authentication is enabled.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OAuth2ProviderConnectionTokenResponse"
        "401":
          description: Invalid or expired `AccessToken` or `StepUpToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        stepUpTokenHeader: []
      - accessTokenCookie: []
        stepUpTokenCookie: []
  /api/auth/sessions:
    get:
      tags:
      - Sessions
      summary: Get Active Sessions
      description: |-
        Get all active sessions of the currently authenticated user.

        You can learn more about sessions [here](https://singularity.stereov.io/docs/guides/auth/sessions).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token) is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/sessions#active-sessions
      operationId: getActiveSessions
      responses:
        "200":
          description: The list of active sessions.
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SessionInfoResponse"
        "401":
          description: Invalid or expired AccessToken.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
    delete:
      tags:
      - Sessions
      summary: Delete All Sessions
      description: "Invalidates all the user's active sessions.\nThis also invalidates\
        \ all [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)s\
        \ \nand [`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)s.\n\
        Therefore, logging out the user from all devices.\n\nYou can learn more about\
        \ sessions [here](https://singularity.stereov.io/docs/guides/auth/sessions).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ is required."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/sessions#invalidating-all-session
      operationId: deleteAllSessions
      responses:
        "200":
          description: Successfully deleted all sessions.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: Invalid or expired AccessToken.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
  /api/auth/sessions/{sessionId}:
    delete:
      tags:
      - Sessions
      summary: Delete Session
      description: "Delete the session of the current user with the given `id` \n\
        and invalidate all tokens related to this session.\n\nYou can learn more about\
        \ sessions [here](https://singularity.stereov.io/docs/guides/auth/sessions).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ is required."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/sessions#invalidating-a-specific-session
      operationId: deleteSession
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: The list of active sessions.
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SessionInfoResponse"
        "401":
          description: Invalid or expired AccessToken.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
  /api/auth/sessions/token:
    post:
      tags:
      - Sessions
      summary: Generate SessionToken
      description: "Generate a [`SessionToken`](https://singularity.stereov.io/docs/guides/auth/tokens#session-token)\
        \ for the current session, if the user is authenticated or \na new [`SessionToken`](https://singularity.stereov.io/docs/guides/auth/tokens#session-token)\
        \ instead. \n\nIt's only purpose is to successfully register or log in a user\
        \ via an OAuth2 provider.\nYou can learn more about OAuth2 providers [here](https://singularity.stereov.io/docs/guides/auth/oauth2)."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/oauth2#1-retrieving-a-session-token
      operationId: generateSessionToken
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionInfoRequest"
      responses:
        "200":
          description: Token generated. The token will be returned if header authentication
            is enabled
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenerateSessionTokenResponse"
      security:
      - {}
      - {}
  /api/guests:
    post:
      tags:
      - Roles
      summary: Create Guest Account
      description: "Create a new [`GUEST`](https://singularity.stereov.io/docs/guides/auth/roles#guests)\
        \ account.\n\nYou can learn more about `GUEST` accounts [here](https://singularity.stereov.io/docs/guides/roles#guests).\n\
        \n**Optional session data:**\n- The `session` object can be included in the\
        \ request body.\n- Inside the `session` object, you can provide the following\
        \ optional fields:\n    - `browser`: The name of the browser used (e.g., \"\
        Chrome\", \"Firefox\").\n    - `os`: The operating system of the device (e.g.,\
        \ \"Windows\", \"macOS\", \"Android\").\n\nThis information helps users identify\
        \ and manage authorized sessions, improving overall account security.\n\n\
        ### Tokens\n\nIf successful, [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ and \n[`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\
        \ \nwill automatically be set as HTTP-only cookies.\nIf [header authentication](https://singularity.stereov.io/docs/guides/auth/authentication#header-authentication)\
        \ is enabled,\n[`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ and \n[`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\n\
        will be returned in the response body and can be used as \nbearer tokens in\
        \ the authorization header for upcoming requests."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/roles#creating-guest-accounts
      operationId: createGuestAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGuestRequest"
        required: true
      responses:
        "200":
          description: Registration successful. Returns user details and tokens if
            header authentication is enabled.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CreateGuestResponse"
        "304":
          description: User is already authenticated. Authenticated session state
            has not changed since last request.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - {}
      - {}
  /api/guests/convert-to-user:
    post:
      tags:
      - Roles
      summary: Convert Guest To User
      description: "Converts a [`GUEST`](https://singularity.stereov.io/docs/guides/roles#guests)\
        \ \naccount to a regular [`USER`](https://singularity.stereov.io/docs/guides/roles#users)\
        \ account.\n\nYou can learn more about `GUEST` accounts [here](https://singularity.stereov.io/docs/guides/roles#guests).\n\
        \n### Requirements\n- The `email` should be a valid email address (e.g., \"\
        test@example.com\")\n  that is not associated to an existing account.\n- The\
        \ `password` must be at least 8 characters long and include at least one uppercase\
        \ letter, \n  one lowercase letter, one number, and one special character\
        \ (!@#$%^&*()_+={}[]|\\:;'\"<>,.?/).\n\n**Optional session data:**\n- The\
        \ `session` object can be included in the request body.\n- Inside the `session`\
        \ object, you can provide the following optional fields:\n    - `browser`:\
        \ The name of the browser used (e.g., \"Chrome\", \"Firefox\").\n    - `os`:\
        \ The operating system of the device (e.g., \"Windows\", \"macOS\", \"Android\"\
        ).\n\nThis information helps users identify and manage authorized sessions,\
        \ improving overall account security.\n\n### Locale\n\nA locale can be specified\
        \ for this request. \nThis will be used for the email verification email.\n\
        You can learn more about email verification [here](https://singularity.stereov.io/docs/guides/auth/authentication#email-verification).\n\
        \nIf no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\n\
        \  of a `GUEST` is required.\n- If successful, the tokens of the `GUEST` account\
        \ become invalid.\n    A new [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ and \n    [`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\
        \ \n    will automatically be set as HTTP-only cookies.\n    If [header authentication](https://singularity.stereov.io/docs/guides/auth/authentication#header-authentication)\
        \ is enabled,\n    [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ and \n    [`RefreshToken`](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)\n\
        \    will be returned in the response body and can be used as \n    bearer\
        \ tokens in the authorization header for upcoming requests."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/roles#creating-guest-accounts
      operationId: convertGuestToUser
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConvertToUserRequest"
        required: true
      responses:
        "200":
          description: Registration successful. Returns user details and tokens if
            header authentication is enabled.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConvertToUserResponse"
        "304":
          description: "Account is already regular [`USER`](https://singularity.stereov.io/docs/guides/roles#users).\
            \ Authenticated session state has not changed since last request."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: '`email` or `password` are invalid.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: AccessToken is invalid or expired.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: The email is already in use.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
  /api/admins/{userId}:
    post:
      tags:
      - Roles
      summary: Grant Admin Permissions
      description: |-
        Grant [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions to a user.

        You can find more information about roles [here](https://singularity.stereov.io/docs/guides/auth/roles).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/roles#admins
      operationId: grantAdminPermissions
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/ObjectId"
      responses:
        "200":
          description: The updated user information
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: Invalid or expired AccessToken.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "AccessToken does permit [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins)\
            \ access."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
    delete:
      tags:
      - Roles
      summary: Revoke Admin Permissions
      description: |-
        Grant [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions to a user.

        You can find more information about roles [here](https://singularity.stereov.io/docs/guides/auth/roles).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/roles#admins
      operationId: revokeAdminPermissions
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/ObjectId"
      responses:
        "200":
          description: The updated user information
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: Invalid or expired AccessToken.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "AccessToken does permit [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins)\
            \ access."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: "Trying to revoke [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins)\
            \ permissions for last remaining admin. At least one admin is required."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
  /api/groups:
    get:
      tags:
      - Groups
      summary: Get Groups
      description: |-
        Get all configured groups.

        You can find more information about groups [here](https://singularity.stereov.io/docs/guides/auth/groups).

        ### Locale

        Group names and descriptions can be specified in multiples languages.
        These can be set when [creating](https://singularity.stereov.io/docs/guides/auth/groups#creating-groups)
        groups or through [updates](https://singularity.stereov.io/docs/guides/auth/groups#updating-groups).

        The `locale` request parameter specifies in which language the information should be returned.
        If no locale is specified, the applications default locale will be used.
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/groups#getting-groups
      operationId: getGroups
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Paginated groups.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageGroupResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: User does not have `ADMIN` permissions.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
    post:
      tags:
      - Groups
      summary: Create Group
      description: |-
        Create a new group.

        You can find more information about groups [here](https://singularity.stereov.io/docs/guides/auth/groups).

        ### Locale

        Group names and descriptions can be specified in multiples languages.
        These can be set when [creating](https://singularity.stereov.io/docs/guides/auth/groups#creating-groups)
        groups or through [updates](https://singularity.stereov.io/docs/guides/auth/groups#updating-groups).

        >**Note:** A translation for the application's default locale must exist.
        >You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).

        The `locale` in the request body specifies which translation should be created.
        The `locale` query parameter specifies which translation should be returned.

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/groups#creating-groups
      operationId: createGroup
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGroupRequest"
        required: true
      responses:
        "200":
          description: Information about newly created group.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GroupResponse"
        "400":
          description: Translation for default locale is missing.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: User does not have `ADMIN` role.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Group with this `key` already exists.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
  /api/groups/{key}:
    get:
      tags:
      - Groups
      summary: Get Group By Key
      description: |-
        Get a group by its `key`.

        You can find more information about groups [here](https://singularity.stereov.io/docs/guides/auth/groups).

        ### Locale

        Group names and descriptions can be specified in multiples languages.
        These can be set when [creating](https://singularity.stereov.io/docs/guides/auth/groups#creating-groups)
        groups or through [updates](https://singularity.stereov.io/docs/guides/auth/groups#updating-groups).

        The `locale` request parameter specifies in which language the information should be returned.
        If no locale is specified, the applications default locale will be used.
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/groups#getting-groups
      operationId: getGroupByKey
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Group information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GroupResponse"
        "401":
          description: Invalid token.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "`AccessToken` does permit [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles)\
            \ access."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
    put:
      tags:
      - Groups
      summary: Update Group
      description: |-
        Update the group with the given `key`.

        You can find more information about groups [here](https://singularity.stereov.io/docs/guides/auth/groups).

        ### Locale

        Group names and descriptions can be specified in multiples languages.
        These can be set when [creating](https://singularity.stereov.io/docs/guides/auth/groups#creating-groups)
        groups or through [updates](https://singularity.stereov.io/docs/guides/auth/groups#updating-groups).

        >**Note:** A translation for the application's default locale must exist.
        >You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).

        The `locale` in the request body specifies which translation should be created.
        The `locale` query parameter specifies which translation should be returned.

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/groups#updating-groups
      operationId: updateGroup
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGroupRequest"
        required: true
      responses:
        "200":
          description: Updated group information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GroupResponse"
        "400":
          description: Update would cause the translation for default locale to be
            missing.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "`AccessToken` does permit [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles)\
            \ access."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
    delete:
      tags:
      - Groups
      summary: Delete Group
      description: |-
        Delete the group of the given `key`.

        You can find more information about groups [here](https://singularity.stereov.io/docs/guides/auth/groups).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/groups#deleting-groups
      operationId: deleteGroup
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: Invalid token.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "AccessToken does permit [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles)\
            \ access."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No group with `key` found.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
  /api/groups/{groupKey}/members/{userId}:
    post:
      tags:
      - Groups
      summary: Add Member to Group
      description: "Add a member to a group with given `key`. \n\nYou can find more\
        \ information about groups [here](https://singularity.stereov.io/docs/guides/auth/groups).\n\
        \n>**Note:** Invalidates all [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\n\
        >because they would contain the wrong group information.\n\n### Tokens\n-\
        \ A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\n\
        \  with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins)\
        \ permissions is required."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/groups#adding-members-to-groups
      operationId: addMemberToGroup
      parameters:
      - name: groupKey
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/ObjectId"
      responses:
        "200":
          description: Updated user information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: '`AccessToken` does not contain `ADMIN` permissions.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No group with `key` or user with `userId` found.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
    delete:
      tags:
      - Groups
      summary: Remove Member from Group
      description: |-
        Remove a member from the group with given `key`.

        You can find more information about groups [here](https://singularity.stereov.io/docs/guides/auth/groups).

        >**Note:** Invalidates all [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
        >because they would contain the wrong group information.

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/auth/groups#removing-members-from-groups
      operationId: removeMemberFromGroup
      parameters:
      - name: groupKey
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/ObjectId"
      responses:
        "200":
          description: Updated user information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: '`AccessToken` does not contain `ADMIN` permissions.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No group with `key` or user with `userId` found.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
  /api/users/{id}:
    get:
      tags:
      - Managing Users
      summary: Get User By ID
      description: |-
        Get information about a specific user.

        You can find more information about user management [here](https://singularity.stereov.io/docs/guides/users/managing-users).
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/users/managing-users
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/ObjectId"
      responses:
        "200":
          description: The user information
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserOverviewResponse"
        "404":
          description: No user with given ID found.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - {}
      - {}
    delete:
      tags:
      - Managing Users
      summary: Delete User By ID
      description: |-
        Delete a User with given ID.

        You can find more information about user management [here](https://singularity.stereov.io/docs/guides/users/managing-users).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/users/managing-users
      operationId: deleteUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/ObjectId"
      responses:
        "200":
          description: The users.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: Invalid or expired AccessToken.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "AccessToken does permit [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins)\
            \ access."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
  /api/users:
    get:
      tags:
      - Managing Users
      summary: Get Users
      description: |-
        Find all users with the specified filters.

        You can find more information about user management [here](https://singularity.stereov.io/docs/guides/users/managing-users).

        **Filter:**

        * **`email`**: The email of a user; must be an exact match.
        * **`roles`**: A set of roles the users should have.
        * **`groups`**: A set of groups the users should be a member of.
        * **`identities`**: A set of identity providers the users should be connected to.
        * **`createdAtAfter`:** A date the users should be created after.
        * **`createdAtBefore`:** A date the users should be created before.
        * **`lastActiveAfter`:** A date the users should be last active after.
        * **`lastActiveBefore`:** A date the users should be last active before.

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/users/managing-users
      operationId: getUsers
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: email
        in: query
        required: false
        schema:
          type: string
      - name: roles
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          uniqueItems: true
      - name: groups
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          uniqueItems: true
      - name: identities
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          uniqueItems: true
      - name: createdAtAfter
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: createdAtBefore
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lastActiveAfter
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lastActiveBefore
        in: query
        required: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: The users.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageUserOverviewResponse"
        "401":
          description: Invalid or expired AccessToken.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "AccessToken does permit [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins)\
            \ access."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
  /api/users/me:
    get:
      tags:
      - Profile Management
      summary: Get User
      description: |-
        Retrieves the user profile information of the currently authenticated user.

        You can find more information about profile management [here](https://singularity.stereov.io/docs/guides/users/profile-management).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token) is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/users/profile-management
      operationId: getAuthorizedUser
      responses:
        "200":
          description: User information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: '`AccessToken` is invalid or expired.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
    put:
      tags:
      - Profile Management
      summary: Update User
      description: |-
        Update the user information of the currently authenticated user.

        You can find more information about profile management [here](https://singularity.stereov.io/docs/guides/users/profile-management).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token) is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/users/profile-management
      operationId: updateAuthorizedUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeUserRequest"
        required: true
      responses:
        "200":
          description: User information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: '`AccessToken` is invalid or expired.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
    delete:
      tags:
      - Profile Management
      summary: Delete User
      description: |-
        Delete the currently authenticated user.

        You can find more information about profile management [here](https://singularity.stereov.io/docs/guides/users/profile-management).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token) is required.
        - A valid [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)
          is required. This token should match user and session contained in the `AccessToken`.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/users/profile-management
      operationId: deleteAuthorizedUser
      responses:
        "200":
          description: User information.
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "401":
          description: '`AccessToken` or `StepUpToken` are invalid or expired.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        stepUpTokenHeader: []
      - accessTokenCookie: []
        stepUpTokenCookie: []
  /api/users/me/email:
    put:
      tags:
      - Profile Management
      summary: Change Email
      description: "Change the email of the currently authenticated user.\n\nIf [email\
        \ is enabled](https://singularity.stereov.io/docs/guides/email/configuration),\n\
        the user needs to verify this email address with a token that is sent to the\
        \ new email address.\nOnly then the email is changed in the database.\nIf\
        \ email is disabled, the email will be changed immediately.\n\n### Requirements\n\
        - The `email` should be a valid email address (e.g., \"test@example.com\"\
        )\n  that is not associated to an existing account.\n\nYou can find more information\
        \ about profile management [here](https://singularity.stereov.io/docs/guides/users/profile-management).\n\
        \n### Locale\n\nA locale can be specified for this request. \nThe email will\
        \ be sent in the specified locale.\nYou can learn more about locale in emails\
        \ [here](https://singularity.stereov.io/docs/guides/email/templates).\n\n\
        If no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ is required.\n- A valid [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)\n\
        \  is required. This token should match user and session contained in the\
        \ `AccessToken`."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/users/profile-management
      operationId: changeEmailOfAuthorizedUser
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeEmailRequest"
        required: true
      responses:
        "200":
          description: User information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: Invalid `email` provided
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: '`AccessToken` or `StepUpToken` are invalid or expired.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        stepUpTokenHeader: []
      - accessTokenCookie: []
        stepUpTokenCookie: []
  /api/users/me/password:
    put:
      tags:
      - Profile Management
      summary: Change Password
      description: "Change the password of the currently authenticated user.\n\nYou\
        \ can find more information about profile management [here](https://singularity.stereov.io/docs/guides/users/profile-management).\n\
        \n### Requirements\n- The `password` must be at least 8 characters long and\
        \ include at least one uppercase letter, \n  one lowercase letter, one number,\
        \ and one special character (!@#$%^&*()_+={}[]|\\:;'\"<>,.?/).\n  \n### Locale\n\
        \nA locale can be specified for this request. \nThe email will be sent in\
        \ the specified locale.\nYou can learn more about locale in emails [here](https://singularity.stereov.io/docs/guides/email/templates).\n\
        \nIf no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\
        \ is required.\n- A valid [`StepUpToken`](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)\n\
        \  is required. This token should match user and session contained in the\
        \ `AccessToken`."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/users/profile-management
      operationId: changePasswordOfAuthorizedUser
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequest"
        required: true
      responses:
        "200":
          description: User information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: Invalid `password` provided
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: '`AccessToken` or `StepUpToken` are invalid or expired or password
            is wrong.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
        stepUpTokenHeader: []
      - accessTokenCookie: []
        stepUpTokenCookie: []
  /api/users/me/avatar:
    put:
      tags:
      - Profile Management
      summary: Update Avatar
      description: |-
        Update the avatar of the currently authenticated user.

        You can find more information about profile management [here](https://singularity.stereov.io/docs/guides/users/profile-management).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token) is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/users/profile-management
      operationId: setAvatarOfAuthorizedUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
              - file
      responses:
        "200":
          description: User information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: '`AccessToken` is invalid or expired.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
    delete:
      tags:
      - Profile Management
      summary: Delete Avatar
      description: |-
        Delete the avatar of the currently authenticated user.

        You can find more information about profile management [here](https://singularity.stereov.io/docs/guides/users/profile-management).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token) is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/users/profile-management
      operationId: deleteAvatarOfAuthorizedUser
      responses:
        "200":
          description: User information.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: '`AccessToken` is invalid or expired.'
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader: []
      - accessTokenCookie: []
  /api/content/articles:
    get:
      tags:
      - Articles
      summary: Get Articles
      description: "Get and filter articles.\n\nYou can find more information about\
        \ articles [here](https://singularity.stereov.io/docs/guides/content/articles).\n\
        \n>**Note:** It will only return articles that are accessible by the requester.\
        \ \n>You can learn more about access [here](https://singularity.stereov.io/docs/guides/content/introduction#authorization-logic).\n\
        \n### Locale\nTags can have multiple translations for `name` and `description`.\n\
        You can specify a `locale` to get the corresponding translation.\n\nIf no\
        \ locale is specified, the applications default locale will be used.\nYou\
        \ can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration)."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/articles
      operationId: getArticles
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: tags
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: title
        in: query
        required: false
        schema:
          type: string
      - name: content
        in: query
        required: false
        schema:
          type: string
      - name: state
        in: query
        required: false
        schema:
          type: string
      - name: roles
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          uniqueItems: true
      - name: createdAtBefore
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: createdAtAfter
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: updatedAtBefore
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: updatedAtAfter
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: publishedAtBefore
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: publishedAtAfter
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: The metadata of the file with `key`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageArticleOverviewResponse"
      security:
      - {}
      - {}
    post:
      tags:
      - Articles
      summary: Create Article
      description: |-
        Create a new article.

        You can find more information about articles [here](https://singularity.stereov.io/docs/guides/content/articles).

        ### Locale
        The `locale` in the request body specifies which translation should be created.
        The `locale` query parameter specifies which translation should be returned.

        If no locale is specified, the applications default locale will be used.
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          from a member of the [`CONTRIBUTOR`](https://singularity.stereov.io/docs/guides/content/introduction#global-server-group-contributor) group.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/articles
      operationId: createArticle
      parameters:
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateArticleRequest"
        required: true
      responses:
        "200":
          description: The newly created article.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FullArticleResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "`AccessToken` does not contain group membership [`CONTRIBUTOR`](https://singularity.stereov.io/docs/guides/content/introduction#global-server-group-contributor)\
            \ access."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: An article with the given `key` already exists.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - contributorScope
      - accessTokenCookie:
        - contributorScope
  /api/content/articles/{key}:
    get:
      tags:
      - Articles
      summary: Get Article By Key
      description: "Get an article by given `key`.\n\nYou can find more information\
        \ about articles [here](https://singularity.stereov.io/docs/guides/content/articles).\n\
        \n>**Note:** It will only return articles that are accessible by the requester.\
        \ \n>You can learn more about access [here](https://singularity.stereov.io/docs/guides/content/introduction#authorization-logic).\n\
        \n### Locale\nTags can have multiple translations for `name` and `description`.\n\
        You can specify a `locale` to get the corresponding translation.\n\nIf no\
        \ locale is specified, the applications default locale will be used.\nYou\
        \ can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration)."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/articles
      operationId: getArticleByKey
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: The metadata of the file with `key`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FullArticleResponse"
        "403":
          description: "`AccessToken` does not belong to a user with [`EDITOR`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\
            \ access on this article."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No article with given key exists.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - {}
      - {}
    patch:
      tags:
      - Articles
      summary: Update Article
      description: |-
        Update an existing article with given `key`.

        You can find more information about articles [here](https://singularity.stereov.io/docs/guides/content/articles).

        ### Locale
        The `locale` in the request body specifies which translation should be updated.
        The `locale` query parameter specifies which translation should be returned.

        If no locale is specified, the applications default locale will be used.
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          of a user with [`EDITOR`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state) access on this article is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/articles
      operationId: updateArticle
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateArticleRequest"
        required: true
      responses:
        "200":
          description: The updated article.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FullArticleResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "`AccessToken` does not belong to a user with [`EDITOR`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\
            \ access on this article."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No article with the given `key` exists.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - editorScope
      - accessTokenCookie:
        - editorScope
  /api/content/articles/{key}/state:
    put:
      tags:
      - Articles
      summary: Update Article State
      description: |-
        Update the state of an existing article with given `key`.

        You can find more information about articles [here](https://singularity.stereov.io/docs/guides/content/articles).

        ### Locale
        Tags can have multiple translations for `name` and `description`.
        You can specify a `locale` to get the corresponding translation.

        If no locale is specified, the applications default locale will be used.
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          of a user with [`EDITOR`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state) access on this article is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/articles
      operationId: updateArticleState
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeArticleStateRequest"
        required: true
      responses:
        "200":
          description: The updated article.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FullArticleResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "`AccessToken` does not belong to a user with [`EDITOR`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\
            \ access on this article."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No article with the given `key` exists.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - editorScope
      - accessTokenCookie:
        - editorScope
  /api/content/articles/{key}/image:
    put:
      tags:
      - Articles
      summary: Update Article Image
      description: |-
        Update the image of an existing article with given `key`.

        You can find more information about articles [here](https://singularity.stereov.io/docs/guides/content/articles).

        ### Locale
        The `locale` in the request body specifies which translation should be created.
        The `locale` query parameter specifies which translation should be returned.

        If no locale is specified, the applications default locale will be used.
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          of a user with [`EDITOR`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state) access on this article is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/articles
      operationId: updateArticleImage
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
              - file
      responses:
        "200":
          description: The updated article.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FullArticleResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "`AccessToken` does not belong to a user with [`EDITOR`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\
            \ access on this article."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No article with the given `key` exists.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "413":
          description: File is too large.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - editorScope
      - accessTokenCookie:
        - editorScope
  /api/content/files/{key}:
    get:
      tags:
      - File Metadata
      summary: Get File Metadata By Key
      description: "Get a file by given `key`.\n\nYou can find more information about\
        \ file management [here](https://singularity.stereov.io/docs/guides/file-storage/metadata).\n\
        \n>**Note:** It will only return file metadata that is accessible by the requester.\
        \ \n>You can learn more about access [here](https://singularity.stereov.io/docs/guides/content/introduction#authorization-logic)."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/file-storage/metadata
      operationId: getFileMetadataByKey
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The metadata of the file with `key`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FileMetadataResponse"
        "404":
          description: No file with given key exists.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - {}
      - {}
  /api/content/files:
    get:
      tags:
      - File Metadata
      summary: Get File Metadata
      description: "Get and filter file metadata.\n\nYou can find more information\
        \ about file management [here](https://singularity.stereov.io/docs/guides/file-storage/metadata).\n\
        \n>**Note:** It will only return file metadata that is accessible by the requester.\
        \ \n>You can learn more about access [here](https://singularity.stereov.io/docs/guides/content/introduction#authorization-logic)."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/file-storage/metadata
      operationId: getFileMetadata
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: tags
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: roles
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          uniqueItems: true
      - name: contentType
        in: query
        required: false
        schema:
          type: string
      - name: createdAtBefore
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: createdAtAfter
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: updatedAtBefore
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: updatedAtAfter
        in: query
        required: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: The metadata of the file with `key`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageFileMetadataResponse"
        "404":
          description: No file with given key exists.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - {}
      - {}
  /api/content/{contentType}/{key}/access:
    get:
      tags:
      - Content Management
      - Articles
      - File Metadata
      summary: Get Access Details of Content Objects
      description: "Get detail on who is allowed to access and change a content object.\n\
        \nYou can find more information about content management [here](https://singularity.stereov.io/docs/guides/content/management).\n\
        \n>**Note:** You have to specify the content type.\n>For [articles](https://singularity.stereov.io/docs/guides/content/articles)\
        \ it is `articles` and for\n>[file metadata](https://singularity.stereov.io/docs/guides/file-storage/metadata)\
        \ it is `files`.\n\n### Locale\n\nA locale can be specified for this request.\
        \ \nThe email will be sent in the specified locale.\nYou can learn more about\
        \ locale in emails [here](https://singularity.stereov.io/docs/guides/email/templates).\n\
        \nIf no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\n\
        \  with [`MAINTAINER`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\
        \ access on this content object is required."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/management
      operationId: getContentObjectAccessDetails
      parameters:
      - name: contentType
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "The updated content object. The response depends on the content\
            \ object. For [articles](https://singularity.stereov.io/docs/guides/content/articles)\
            \ it will return [`FullArticleResponse`](https://singularity.stereov.io/docs/api/schemas/fullarticleresponse)and\
            \ for [file metadata](https://singularity.stereov.io/docs/guides/file-storage/metadata)\
            \ it will return [`FileMetadataResponse`](https://singularity.stereov.io/docs/api/schemas/filemetadataresponse)."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExtendedContentAccessDetailsResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "AccessToken does permit [`MAINTAINER`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\
            \ access on this resource."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - maintainerScope
      - accessTokenCookie:
        - maintainerScope
    put:
      tags:
      - Content Management
      - Articles
      - File Metadata
      summary: Update Access of Content Objects
      description: "Update the access to content object.\n\nYou can find more information\
        \ about content management [here](https://singularity.stereov.io/docs/guides/content/management).\n\
        \n>**Note:** You have to specify the content type.\n>For [articles](https://singularity.stereov.io/docs/guides/content/articles)\
        \ it is `articles` and for\n>[file metadata](https://singularity.stereov.io/docs/guides/file-storage/metadata)\
        \ it is `files`.\n\n### Locale\n\nA locale can be specified for this request.\
        \ \nThe email will be sent in the specified locale.\nYou can learn more about\
        \ locale in emails [here](https://singularity.stereov.io/docs/guides/email/templates).\n\
        \nIf no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\n\
        \  with [`MAINTAINER`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\
        \ access on this content object is required."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/management
      operationId: updateContentObjectAccess
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: contentType
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateContentVisibilityRequest"
        required: true
      responses:
        "200":
          description: "The updated content object. The response depends on the content\
            \ object. For [articles](https://singularity.stereov.io/docs/guides/content/articles)\
            \ it will return [`FullArticleResponse`](https://singularity.stereov.io/docs/api/schemas/fullarticleresponse)and\
            \ for [file metadata](https://singularity.stereov.io/docs/guides/file-storage/metadata)\
            \ it will return [`FileMetadataResponse`](https://singularity.stereov.io/docs/api/schemas/filemetadataresponse)."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ContentResponseObject"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "AccessToken does permit [`MAINTAINER`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\
            \ access on this content object."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - maintainerScope
      - accessTokenCookie:
        - maintainerScope
  /api/content/{contentType}/{key}/owner:
    put:
      tags:
      - Content Management
      - Articles
      - File Metadata
      summary: 'Update Owner of Content Object '
      description: "Update the owner of a content object.\nOnly owners can perform\
        \ this action. \n\n>**Note:** You have to specify the content type.\n>For\
        \ [articles](https://singularity.stereov.io/docs/guides/content/articles)\
        \ it is `articles` and for\n>[file metadata](https://singularity.stereov.io/docs/guides/file-storage/metadata)\
        \ it is `files`.\n\nYou can find more information about content management\
        \ [here](https://singularity.stereov.io/docs/guides/content/management).\n\
        \n>**Note:** The old owner will automatically be demoted to a [`MAINTAINER`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\n\
        >role if the action was successful.\n\n### Locale\n\nA locale can be specified\
        \ for this request. \nThe email will be sent in the specified locale.\nYou\
        \ can learn more about locale in emails [here](https://singularity.stereov.io/docs/guides/email/templates).\n\
        \nIf no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\n\
        \  of the owner of this content object is required."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/management
      operationId: updateContentObjectOwner
      parameters:
      - name: contentType
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: req
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/UpdateOwnerRequest"
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "The updated content object. The response depends on the content\
            \ object. For [articles](https://singularity.stereov.io/docs/guides/content/articles)\
            \ it will return [`FullArticleResponse`](https://singularity.stereov.io/docs/api/schemas/fullarticleresponse)and\
            \ for [file metadata](https://singularity.stereov.io/docs/guides/file-storage/metadata)\
            \ it will return [`FileMetadataResponse`](https://singularity.stereov.io/docs/api/schemas/filemetadataresponse)."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ContentResponseObject"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: AccessToken does is not of the owner of the content object.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - maintainerScope
      - accessTokenCookie:
        - maintainerScope
  /api/content/{contentType}/{key}/trusted:
    put:
      tags:
      - Content Management
      - Articles
      - File Metadata
      summary: 'Update Trusted State of Content Object '
      description: "Update the trusted state of a content object.\nThis is critical\
        \ for links and files that may harm the application.\nThe trusted state can\
        \ only be changed by your application-wide [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins)s.\n\
        \nYou can find more information about content management [here](https://singularity.stereov.io/docs/guides/content/management).\n\
        \n>**Note:** You have to specify the content type.\n>For [articles](https://singularity.stereov.io/docs/guides/content/articles)\
        \ it is `articles` and for\n>[file metadata](https://singularity.stereov.io/docs/guides/file-storage/metadata)\
        \ it is `files`.\n\n### Locale\n\nA locale can be specified for this request.\
        \ \nThe email will be sent in the specified locale.\nYou can learn more about\
        \ locale in emails [here](https://singularity.stereov.io/docs/guides/email/templates).\n\
        \nIf no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\n\
        \  with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins)\
        \ permissions on the server."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/management
      operationId: updateContentObjectTrustedState
      parameters:
      - name: contentType
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: trusted
        in: query
        required: true
        schema:
          type: boolean
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "The updated content object. The response depends on the content\
            \ object. For [articles](https://singularity.stereov.io/docs/guides/content/articles)\
            \ it will return [`FullArticleResponse`](https://singularity.stereov.io/docs/api/schemas/fullarticleresponse)and\
            \ for [file metadata](https://singularity.stereov.io/docs/guides/file-storage/metadata)\
            \ it will return [`FileMetadataResponse`](https://singularity.stereov.io/docs/api/schemas/filemetadataresponse)."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ContentResponseObject"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "AccessToken does permit [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins)\
            \ access on the server."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
  /api/content/{contentType}/{key}:
    delete:
      tags:
      - Content Management
      - Articles
      - File Metadata
      summary: Delete Content Object
      description: "Delete a content object.\n\nYou can find more information about\
        \ content management [here](https://singularity.stereov.io/docs/guides/content/management).\n\
        \n>**Note:** You have to specify the content type.\n>For [articles](https://singularity.stereov.io/docs/guides/content/articles)\
        \ it is `articles` and for\n>[file metadata](https://singularity.stereov.io/docs/guides/file-storage/metadata)\
        \ it is `files`.\n\n### Locale\n\nA locale can be specified for this request.\
        \ \nThe email will be sent in the specified locale.\nYou can learn more about\
        \ locale in emails [here](https://singularity.stereov.io/docs/guides/email/templates).\n\
        \nIf no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\n\
        \  with [`MAINTAINER`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\
        \ access on this content object is required."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/management
      operationId: deleteContentObjectByKey
      parameters:
      - name: contentType
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "AccessToken does permit [`MAINTAINER`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\
            \ access on this resource."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - maintainerScope
      - accessTokenCookie:
        - maintainerScope
  /api/content/tags:
    get:
      tags:
      - Tags
      summary: Get Tags
      description: |-
        Get and filter existing tags.

        You can find more information about tags [here](https://singularity.stereov.io/docs/guides/content/tags).

        ### Locale
        Tags can have multiple translations for `name` and `description`.
        You can specify a `locale` to get the corresponding translation.

        If no locale is specified, the applications default locale will be used.
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/tags
      operationId: getTags
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: key
        in: query
        required: false
        schema:
          type: string
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: description
        in: query
        required: false
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: The tags.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageTagResponse"
      security:
      - {}
      - {}
    post:
      tags:
      - Tags
      summary: Create Tag
      description: |-
        Create a new tag.

        You can find more information about tags [here](https://singularity.stereov.io/docs/guides/content/tags).

        ### Locale
        The `locale` in the request body specifies which translation should be created.
        The `locale` query parameter specifies which translation should be returned.

        If no locale is specified, the applications default locale will be used.
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          from a member of the [`CONTRIBUTOR`](https://singularity.stereov.io/docs/guides/content/introduction#global-server-group-contributor) group.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/tags
      operationId: createTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTagRequest"
        required: true
      responses:
        "200":
          description: The newly created tag.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TagResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "`AccessToken` does not contain group membership [`CONTRIBUTOR`](https://singularity.stereov.io/docs/guides/content/introduction#global-server-group-contributor)\
            \ access."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: A tag with the given `key` already exists.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - contributorScope
      - accessTokenCookie:
        - contributorScope
  /api/content/tags/{key}:
    get:
      tags:
      - Tags
      summary: Get Tag By Key
      description: |-
        Get a tag by given `key`.

        You can find more information about tags [here](https://singularity.stereov.io/docs/guides/content/tags).

        ### Locale
        Tags can have multiple translations for `name` and `description`.
        You can specify a `locale` to get the corresponding translation.

        If no locale is specified, the applications default locale will be used.
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/tags
      operationId: getTagByKey
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: The tag with `key`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TagResponse"
        "404":
          description: No tag with given key exists.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - {}
      - {}
    delete:
      tags:
      - Tags
      summary: Delete Tag
      description: |-
        Delete the tag with the given `key`.

        You can find more information about tags [here](https://singularity.stereov.io/docs/guides/content/tags).

        ### Locale
        Tags can have multiple translations for `name` and `description`.
        You can specify a `locale` to get the corresponding translation.

        If no locale is specified, the applications default locale will be used.
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          from a member of the [`CONTRIBUTOR`](https://singularity.stereov.io/docs/guides/content/introduction#global-server-group-contributor) group.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/tags
      operationId: deleteTag
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The updated tag
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "`AccessToken` does not contain group membership [`CONTRIBUTOR`](https://singularity.stereov.io/docs/guides/content/introduction#global-server-group-contributor)\
            \ access."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No tag with `key` found.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - contributorScope
      - accessTokenCookie:
        - contributorScope
    patch:
      tags:
      - Tags
      summary: Update Tag
      description: |-
        Update the tag with the given `key`.

        You can find more information about tags [here](https://singularity.stereov.io/docs/guides/content/tags).

        ### Locale
        The `locale` in the request body specifies which translation should be updated.
        The `locale` query parameter specifies which translation should be returned.

        The `locale` query parameter specifies the translation that will be returned.
        If no locale is specified, the applications default locale will be used.
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          from a member of the [`CONTRIBUTOR`](https://singularity.stereov.io/docs/guides/content/introduction#global-server-group-contributor) group.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/tags
      operationId: updateTag
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagRequest"
        required: true
      responses:
        "200":
          description: The updated tag
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TagResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "`AccessToken` does not contain group membership [`CONTRIBUTOR`](https://singularity.stereov.io/docs/guides/content/introduction#global-server-group-contributor)\
            \ access."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No tag with `key` found.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - contributorScope
      - accessTokenCookie:
        - contributorScope
  /api/content/{contentType}/invitations/{key}:
    post:
      tags:
      - Invitations
      summary: Invite User
      description: "Invite a user to access or edit a content object.\n\nYou can find\
        \ more information about invitations and content [here](https://singularity.stereov.io/docs/guides/content/invitations).\n\
        \n### Locale\n\nA locale can be specified for this request. \nThe email will\
        \ be sent in the specified locale.\nYou can learn more about locale in emails\
        \ [here](https://singularity.stereov.io/docs/guides/email/templates).\n\n\
        If no locale is specified, the applications default locale will be used.\n\
        You can learn more about configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration).\n\
        \n### Tokens\n- A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)\n\
        \  with [`MAINTAINER`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\
        \ access on this object is required."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/invitations
      operationId: inviteUserToContentObject
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: contentType
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InviteUserToContentRequest"
        required: true
      responses:
        "200":
          description: The updated content access details of the object.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExtendedContentAccessDetailsResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "AccessToken does permit [`MAINTAINER`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\
            \ access on this object."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - maintainerScope
      - accessTokenCookie:
        - maintainerScope
  /api/content/{contentType}/invitations/accept:
    post:
      tags:
      - Invitations
      summary: Accept Invitation
      description: "Accept an invitation from a user to access or edit a content object.\n\
        \nYou can find more information about invitations and content [here](https://singularity.stereov.io/docs/guides/content/invitations).\n\
        \n### Locale\n\nA locale can be specified for this request. \nThe given object\
        \ will be returned in the specified `locale`.\n\nIf no locale is specified,\
        \ the applications default locale will be used.\nYou can learn more about\
        \ configuring the default locale [here](https://singularity.stereov.io/docs/guides/configuration)."
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/invitations
      operationId: acceptInvitationToContentObject
      parameters:
      - name: contentType
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptInvitationToContentRequest"
        required: true
      responses:
        "200":
          description: "The content object the user was invited to. The response depends\
            \ on the content object. For [articles](https://singularity.stereov.io/docs/guides/content/articles)\
            \ it will return [`FullArticleResponse`](https://singularity.stereov.io/docs/api/schemas/fullarticleresponse)and\
            \ for [file metadata](https://singularity.stereov.io/docs/guides/file-storage/metadata)\
            \ it will return [`FileMetadataResponse`](https://singularity.stereov.io/docs/api/schemas/filemetadataresponse)."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ContentResponseObject"
        "401":
          description: Invitation `token` is invalid or expired.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - {}
      - {}
  /api/content/invitations/{id}:
    delete:
      tags:
      - Invitations
      summary: Delete Invitation
      description: |-
        Delete and invalidate an existing invitation.

        You can find more information about invitations and content [here](https://singularity.stereov.io/docs/guides/content/invitations).

        >**Note:** Expired invitations will be deleted automatically.

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          with [`MAINTAINER`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state) access on this object is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/content/invitations
      operationId: deleteInvitationToContentObjectById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/ObjectId"
      responses:
        "200":
          description: Success.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: Invalid or expired `AccessToken`.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "AccessToken does permit [`MAINTAINER`](https://singularity.stereov.io/docs/guides/content/introduction#object-specific-roles-shared-state)\
            \ access on this object."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No invitation with given `id` found.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - maintainerScope
      - accessTokenCookie:
        - maintainerScope
  /api/security/secrets/rotate-keys:
    post:
      tags:
      - Security
      summary: Trigger Secret Rotation
      description: |-
        Triggers an immediate secret key rotation. This is an asynchronous operation.

        You can learn more about key rotation [here](https://singularity.stereov.io/docs/guides/secret-store/basics#secret-rotation).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/secret-store/basics#secret-rotation
      operationId: rotateSecretKeys
      responses:
        "200":
          description: Rotation process successfully triggered.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: Invalid or expired AccessToken.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "AccessToken does not grant [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins)\
            \ access."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
  /api/security/secrets/rotate-keys/status:
    get:
      tags:
      - Security
      summary: Get Secret Rotation Status
      description: |-
        Returns the status of the current or most recent secret rotation process.

        You can learn more about key rotation [here](https://singularity.stereov.io/docs/guides/secret-store/basics#secret-rotation).

        ### Tokens
        - A valid [`AccessToken`](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)
          with [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins) permissions is required.
      externalDocs:
        url: https://singularity.stereov.io/docs/guides/secret-store/basics#secret-rotation
      operationId: getSecretKeyRotationStatus
      responses:
        "200":
          description: The rotation status.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RotationStatusResponse"
        "401":
          description: Invalid or expired AccessToken.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "AccessToken does not grant [`ADMIN`](https://singularity.stereov.io/docs/guides/auth/roles#admins)\
            \ access."
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
      - accessTokenHeader:
        - adminScope
      - accessTokenCookie:
        - adminScope
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
        error:
          type: string
        message:
          type: string
        path:
          type: string
      required:
      - error
      - status
      - timestamp
    ChangeUserRequest:
      type: object
      properties:
        name:
          type: string
    ContentAccessDetails:
      type: object
      properties:
        ownerId:
          $ref: "#/components/schemas/ObjectId"
        visibility:
          type: string
          enum:
          - PRIVATE
          - PUBLIC
          - SHARED
        users:
          $ref: "#/components/schemas/ContentAccessPermissions"
        groups:
          $ref: "#/components/schemas/ContentAccessPermissions"
        invitations:
          type: array
          items:
            $ref: "#/components/schemas/ObjectId"
          uniqueItems: true
      required:
      - groups
      - invitations
      - ownerId
      - users
      - visibility
    ContentAccessPermissions:
      type: object
      properties:
        maintainer:
          type: array
          items:
            type: string
          uniqueItems: true
        editor:
          type: array
          items:
            type: string
          uniqueItems: true
        viewer:
          type: array
          items:
            type: string
          uniqueItems: true
        isEmpty:
          type: boolean
      required:
      - editor
      - isEmpty
      - maintainer
      - viewer
    FileMetadataResponse:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectId"
        key:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        access:
          $ref: "#/components/schemas/ContentAccessDetails"
        renditions:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/FileRenditionResponse"
        trusted:
          type: boolean
        tags:
          type: array
          items:
            type: string
          uniqueItems: true
      required:
      - access
      - createdAt
      - id
      - key
      - renditions
      - tags
      - trusted
      - updatedAt
    FileRenditionResponse:
      type: object
      properties:
        key:
          type: string
        size:
          type: integer
          format: int64
        contentType:
          type: string
        url:
          type: string
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
      required:
      - contentType
      - key
      - size
      - url
    ObjectId:
      type: object
      properties:
        timestamp:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
    UserResponse:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectId"
        name:
          type: string
        email:
          type: string
        identityProviders:
          type: array
          items:
            type: string
        roles:
          type: array
          items:
            type: string
            enum:
            - USER
            - ADMIN
            - GUEST
          uniqueItems: true
        emailVerified:
          type: boolean
        lastActive:
          type: string
        twoFactorAuthEnabled:
          type: boolean
        preferredTwoFactorMethod:
          type: string
          enum:
          - totp
          - mail
        twoFactorMethods:
          type: array
          items:
            type: string
            enum:
            - totp
            - mail
        avatar:
          $ref: "#/components/schemas/FileMetadataResponse"
        created:
          type: string
        groups:
          type: array
          items:
            type: string
          uniqueItems: true
      required:
      - created
      - emailVerified
      - groups
      - id
      - identityProviders
      - lastActive
      - name
      - roles
      - twoFactorAuthEnabled
      - twoFactorMethods
    ChangePasswordRequest:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
          description: "The user's chosen password. It must be at least 8 characters\
            \ long and include at least one uppercase letter, one lowercase letter,\
            \ one number, and one special character (!@#$%^&*()_+={}[]|\\:;'\"<>,.?/)."
          example: S3cur3P@ssw0rd!
          minLength: 1
          pattern: "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+\\-={}\\[\\\
            ]|\\\\:;'\"<,>.?/]).{8,}"
      required:
      - newPassword
      - oldPassword
    ChangeEmailRequest:
      type: object
      properties:
        newEmail:
          type: string
          format: email
          minLength: 1
      required:
      - newEmail
    GroupTranslation:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - description
      - name
    UpdateGroupRequest:
      type: object
      properties:
        translations:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/GroupTranslation"
          description: A map of locale to group translation. The translations will
            be added or updated.
          example:
            en:
              name: Pilots
              description: People who can fly
            de:
              name: Piloten
              description: "Personen, die fliegen können"
        translationsToDelete:
          type: array
          description: The translations to delete.
          example: en
          items:
            type: string
          uniqueItems: true
      required:
      - translations
      - translationsToDelete
    GroupResponse:
      type: object
      properties:
        key:
          type: string
        locale:
          type: string
        name:
          type: string
        description:
          type: string
      required:
      - description
      - key
      - locale
      - name
    ContentResponseObject: {}
    UpdateOwnerRequest:
      type: object
      properties:
        newOwnerId:
          $ref: "#/components/schemas/ObjectId"
      required:
      - newOwnerId
    UpdateContentVisibilityRequest:
      type: object
      properties:
        visibility:
          type: string
          enum:
          - PRIVATE
          - PUBLIC
          - SHARED
        sharedUsers:
          type: object
          additionalProperties:
            type: string
            enum:
            - VIEWER
            - EDITOR
            - MAINTAINER
        sharedGroups:
          type: object
          additionalProperties:
            type: string
            enum:
            - VIEWER
            - EDITOR
            - MAINTAINER
      required:
      - sharedGroups
      - sharedUsers
      - visibility
    ChangeArticleStateRequest:
      type: object
      properties:
        state:
          type: string
          enum:
          - PUBLISHED
          - DRAFT
          - ARCHIVED
      required:
      - state
    ArticleColors:
      type: object
      properties:
        text:
          type: string
        background:
          type: string
    ContentAccessDetailsResponse:
      type: object
      properties:
        ownerId:
          $ref: "#/components/schemas/ObjectId"
        visibility:
          type: string
          enum:
          - PRIVATE
          - PUBLIC
          - SHARED
        canEdit:
          type: boolean
        canDelete:
          type: boolean
      required:
      - canDelete
      - canEdit
      - ownerId
      - visibility
    FullArticleResponse:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectId"
        key:
          type: string
        createdAt:
          type: string
          format: date-time
        publishedAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        owner:
          $ref: "#/components/schemas/UserOverviewResponse"
        path:
          type: string
        state:
          type: string
          enum:
          - PUBLISHED
          - DRAFT
          - ARCHIVED
        colors:
          $ref: "#/components/schemas/ArticleColors"
        image:
          $ref: "#/components/schemas/FileMetadataResponse"
        locale:
          type: string
        title:
          type: string
        summary:
          type: string
        content:
          type: string
        trusted:
          type: boolean
        access:
          $ref: "#/components/schemas/ContentAccessDetailsResponse"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/TagResponse"
      required:
      - access
      - colors
      - content
      - createdAt
      - id
      - key
      - locale
      - owner
      - path
      - state
      - summary
      - tags
      - title
      - trusted
      - updatedAt
    TagResponse:
      type: object
      properties:
        key:
          type: string
        locale:
          type: string
        name:
          type: string
        description:
          type: string
      required:
      - description
      - key
      - locale
      - name
    UserOverviewResponse:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectId"
        name:
          type: string
        email:
          type: string
        avatar:
          $ref: "#/components/schemas/FileMetadataResponse"
        roles:
          type: array
          items:
            type: string
            enum:
            - USER
            - ADMIN
            - GUEST
          uniqueItems: true
      required:
      - id
      - name
      - roles
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
      required:
      - success
    CreateGuestRequest:
      type: object
      properties:
        name:
          type: string
        session:
          $ref: "#/components/schemas/SessionInfoRequest"
      required:
      - name
    SessionInfoRequest:
      type: object
      properties:
        browser:
          type: string
          description: The name of the browser used.
          example: Chrome
        os:
          type: string
          description: The operating system of the device.
          example: WIndows
    City:
      type: object
      properties:
        confidence:
          type: integer
          format: int32
        geoname_id:
          type: integer
          format: int64
        names:
          type: object
          additionalProperties:
            type: string
    Continent:
      type: object
      properties:
        code:
          type: string
        geoname_id:
          type: integer
          format: int64
        names:
          type: object
          additionalProperties:
            type: string
    Country:
      type: object
      properties:
        confidence:
          type: integer
          format: int32
        geoname_id:
          type: integer
          format: int64
        is_in_european_union:
          type: boolean
        iso_code:
          type: string
        names:
          type: object
          additionalProperties:
            type: string
    CreateGuestResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserResponse"
        accessToken:
          type: string
        refreshToken:
          type: string
        location:
          $ref: "#/components/schemas/GeolocationResponse"
      required:
      - user
    GeolocationResponse:
      type: object
      properties:
        ipAddress:
          type: string
        city:
          $ref: "#/components/schemas/City"
        country:
          $ref: "#/components/schemas/Country"
        continent:
          $ref: "#/components/schemas/Continent"
        location:
          $ref: "#/components/schemas/Location"
      required:
      - city
      - continent
      - country
      - ipAddress
      - location
    Location:
      type: object
      properties:
        accuracy_radius:
          type: integer
          format: int32
        average_income:
          type: integer
          format: int32
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        metro_code:
          type: integer
          format: int32
          deprecated: true
        population_density:
          type: integer
          format: int32
        time_zone:
          type: string
    ConvertToUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: The user's unique email address.
          example: jane.doe@example.com
          minLength: 1
        password:
          type: string
          description: "The user's chosen password. It must be at least 8 characters\
            \ long and include at least one uppercase letter, one lowercase letter,\
            \ one number, and one special character (!@#$%^&*()_+={}[]|\\:;'\"<>,.?/)."
          example: S3cur3P@ssw0rd!
          pattern: "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+\\-={}\\[\\\
            ]|\\\\:;'\"<,>.?/]).{8,}"
        session:
          $ref: "#/components/schemas/SessionInfoRequest"
      required:
      - email
      - password
    ConvertToUserResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserResponse"
        accessToken:
          type: string
        refreshToken:
          type: string
        location:
          $ref: "#/components/schemas/GeolocationResponse"
      required:
      - user
    CreateGroupRequest:
      type: object
      properties:
        key:
          type: string
          description: A unique key for the group.
          example: pilots
        translations:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/GroupTranslation"
          description: A map of locale to group translation.
          example:
            en:
              name: Pilots
              description: People who can fly
            de:
              name: Piloten
              description: "Personen, die fliegen können"
      required:
      - key
      - translations
    InviteUserToContentRequest:
      type: object
      properties:
        email:
          type: string
        role:
          type: string
          enum:
          - VIEWER
          - EDITOR
          - MAINTAINER
      required:
      - email
      - role
    ExtendedContentAccessDetailsResponse:
      type: object
      properties:
        ownerId:
          $ref: "#/components/schemas/ObjectId"
        visibility:
          type: string
          enum:
          - PRIVATE
          - PUBLIC
          - SHARED
        users:
          type: array
          items:
            $ref: "#/components/schemas/UserContentAccessDetails"
        groups:
          type: object
          additionalProperties:
            type: string
            enum:
            - VIEWER
            - EDITOR
            - MAINTAINER
        invitations:
          type: array
          items:
            $ref: "#/components/schemas/InvitationResponse"
      required:
      - groups
      - invitations
      - ownerId
      - users
      - visibility
    InvitationResponse:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectId"
        issuedAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
        email:
          type: string
        claims:
          type: object
          additionalProperties: {}
      required:
      - claims
      - email
      - expiresAt
      - id
      - issuedAt
    UserContentAccessDetails:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserOverviewResponse"
        role:
          type: string
          enum:
          - VIEWER
          - EDITOR
          - MAINTAINER
      required:
      - role
      - user
    AcceptInvitationToContentRequest:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    CreateTagRequest:
      type: object
      properties:
        key:
          type: string
        locale:
          type: string
        name:
          type: string
        description:
          type: string
      required:
      - key
      - name
    CreateArticleRequest:
      type: object
      properties:
        locale:
          type: string
        title:
          type: string
        summary:
          type: string
        content:
          type: string
      required:
      - content
      - locale
      - summary
      - title
    StepUpRequest:
      type: object
      properties:
        password:
          type: string
      required:
      - password
    StepUpResponse:
      type: object
      properties:
        token:
          type: string
    GenerateSessionTokenResponse:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    RegisterUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: The user's unique email address.
          example: jane.doe@example.com
          minLength: 1
        password:
          type: string
          description: "The user's chosen password. It must be at least 8 characters\
            \ long and include at least one uppercase letter, one lowercase letter,\
            \ one number, and one special character (!@#$%^&*()_+={}[]|\\:;'\"<>,.?/)."
          example: S3cur3P@ssw0rd!
          pattern: "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+\\-={}\\[\\\
            ]|\\\\:;'\"<,>.?/]).{8,}"
        name:
          type: string
          description: The user's name. Makes the user experience more personalized
          minLength: 1
        session:
          $ref: "#/components/schemas/SessionInfoRequest"
          description: "Information about the user's session, for security purposes."
      required:
      - email
      - name
      - password
    RegisterResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserResponse"
        accessToken:
          type: string
        refreshToken:
          type: string
        location:
          $ref: "#/components/schemas/GeolocationResponse"
      required:
      - user
    RefreshTokenResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserResponse"
        accessToken:
          type: string
        refreshToken:
          type: string
      required:
      - user
    AddPasswordAuthenticationRequest:
      type: object
      properties:
        password:
          type: string
          description: "The user's chosen password. It must be at least 8 characters\
            \ long and include at least one uppercase letter, one lowercase letter,\
            \ one number, and one special character (!@#$%^&*()_+={}[]|\\:;'\"<>,.?/)."
          example: S3cur3P@ssw0rd!
          pattern: "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+\\-={}\\[\\\
            ]|\\\\:;'\"<,>.?/]).{8,}"
      required:
      - password
    OAuth2ProviderConnectionTokenResponse:
      type: object
      properties:
        token:
          type: string
    OAuth2ProviderConnectionRequest:
      type: object
      properties:
        provider:
          type: string
      required:
      - provider
    ResetPasswordRequest:
      type: object
      properties:
        newPassword:
          type: string
      required:
      - newPassword
    SendPasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    MailSendResponse:
      type: object
      properties:
        cooldown:
          type: integer
          format: int64
      required:
      - cooldown
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        session:
          $ref: "#/components/schemas/SessionInfoRequest"
      required:
      - email
      - password
    LoginResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserResponse"
        accessToken:
          type: string
        refreshToken:
          type: string
        twoFactorRequired:
          type: boolean
        allowedTwoFactorMethods:
          type: array
          items:
            type: string
            enum:
            - totp
            - mail
        preferredTwoFactorMethod:
          type: string
          enum:
          - totp
          - mail
        twoFactorAuthenticationToken:
          type: string
        location:
          $ref: "#/components/schemas/GeolocationResponse"
      required:
      - twoFactorRequired
      - user
    TwoFactorSetupResponse:
      type: object
      properties:
        secret:
          type: string
        totpAuthUrl:
          type: string
        recoveryCodes:
          type: array
          items:
            type: string
        token:
          type: string
      required:
      - recoveryCodes
      - secret
      - token
      - totpAuthUrl
    TwoFactorVerifySetupRequest:
      type: object
      properties:
        token:
          type: string
        code:
          type: integer
          format: int32
      required:
      - code
      - token
    TwoFactorRecoveryResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserResponse"
        accessToken:
          type: string
        refreshToken:
          type: string
        stepUpToken:
          type: string
        sessionToken:
          type: string
      required:
      - user
    TotpRecoveryRequest:
      type: object
      properties:
        code:
          type: string
        session:
          $ref: "#/components/schemas/SessionInfoRequest"
      required:
      - code
    CompleteStepUpRequest:
      type: object
      properties:
        email:
          type: string
        totp:
          type: integer
          format: int32
    ChangePreferredTwoFactorMethodRequest:
      type: object
      properties:
        method:
          type: string
          enum:
          - totp
          - mail
      required:
      - method
    CompleteLoginRequest:
      type: object
      properties:
        email:
          type: string
        totp:
          type: integer
          format: int32
        session:
          $ref: "#/components/schemas/SessionInfoRequest"
    EnableEmailTwoFactorMethodRequest:
      type: object
      properties:
        code:
          type: string
      required:
      - code
    UpdateTagRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        locale:
          type: string
    UpdateArticleRequest:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
        title:
          type: string
        colors:
          $ref: "#/components/schemas/ArticleColors"
        summary:
          type: string
        content:
          type: string
        locale:
          type: string
      required:
      - locale
    PageUserOverviewResponse:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/UserOverviewResponse"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
        offset:
          type: integer
          format: int64
        sort:
          $ref: "#/components/schemas/SortObject"
    SortObject:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
    RotationStatusResponse:
      type: object
      properties:
        isOngoing:
          type: boolean
        lastRotation:
          type: string
          format: date-time
      required:
      - isOngoing
    PageGroupResponse:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/GroupResponse"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageTagResponse:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/TagResponse"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageFileMetadataResponse:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/FileMetadataResponse"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ArticleOverviewResponse:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ObjectId"
        key:
          type: string
        createdAt:
          type: string
          format: date-time
        publishedAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        path:
          type: string
        state:
          type: string
          enum:
          - PUBLISHED
          - DRAFT
          - ARCHIVED
        title:
          type: string
        colors:
          $ref: "#/components/schemas/ArticleColors"
        locale:
          type: string
        summary:
          type: string
        image:
          $ref: "#/components/schemas/FileMetadataResponse"
        access:
          $ref: "#/components/schemas/ContentAccessDetailsResponse"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/TagResponse"
      required:
      - access
      - colors
      - createdAt
      - id
      - key
      - locale
      - path
      - state
      - summary
      - tags
      - title
      - updatedAt
    PageArticleOverviewResponse:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/ArticleOverviewResponse"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    AuthenticationStatusResponse:
      type: object
      properties:
        authenticated:
          type: boolean
        stepUp:
          type: boolean
        emailVerified:
          type: boolean
        twoFactorRequired:
          type: boolean
        preferredTwoFactorMethod:
          type: string
          enum:
          - totp
          - mail
        twoFactorMethods:
          type: array
          items:
            type: string
            enum:
            - totp
            - mail
      required:
      - authenticated
      - stepUp
      - twoFactorRequired
    LocationInfo:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        cityName:
          type: string
        countryCode:
          type: string
      required:
      - countryCode
      - latitude
      - longitude
    SessionInfoResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        browser:
          type: string
        os:
          type: string
        ipAddress:
          type: string
        location:
          $ref: "#/components/schemas/LocationInfo"
        lastActive:
          type: string
          format: date-time
      required:
      - id
      - lastActive
    IdentityProviderResponse:
      type: object
      properties:
        provider:
          type: string
      required:
      - provider
    MailCooldownResponse:
      type: object
      properties:
        remaining:
          type: integer
          format: int64
      required:
      - remaining
  securitySchemes:
    twoFactorAuthenticationTokenCookie:
      type: apiKey
      description: "Token for successful authentication with email and password, indicating\
        \ 2FA is required.You can learn more [here](https://singularity.stereov.io/docs/guides/auth/tokens#two-factor-authentication-token)."
      name: two_factor_authentication_token
      in: cookie
    accessTokenHeader:
      type: http
      description: "Access token for user authentication. You can learn more [here](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)."
      scheme: bearer
      bearerFormat: JWT
    accessTokenCookie:
      type: apiKey
      description: "Access token for user authentication.You can learn more [here](https://singularity.stereov.io/docs/guides/auth/tokens#access-token)."
      name: access_token
      in: cookie
    stepUpTokenCookie:
      type: apiKey
      description: "Token for step up authentication allowing access of secure resources.You\
        \ can learn more [here](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)."
      name: step_up_token
      in: cookie
    twoFactorAuthenticationTokenHeader:
      type: apiKey
      description: "Token for successful authentication with email and password, indicating\
        \ 2FA is required.You can learn more [here](https://singularity.stereov.io/docs/guides/auth/tokens#two-factor-authentication-token)."
      name: X-Two-Factor-Authentication-Token
      in: header
    refreshTokenHeader:
      type: http
      description: "Refresh token to request new access tokens.You can learn more\
        \ [here](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)."
      scheme: bearer
      bearerFormat: JWT
    stepUpTokenHeader:
      type: apiKey
      description: "Token for step up authentication allowing access of secure resources.You\
        \ can learn more [here](https://singularity.stereov.io/docs/guides/auth/tokens#step-up-token)."
      name: X-Step-Up-Token
      in: header
    refreshTokenCookie:
      type: apiKey
      description: "Refresh token to request new access tokens.You can learn more\
        \ [here](https://singularity.stereov.io/docs/guides/auth/tokens#refresh-token)."
      name: refresh_token
      in: cookie
