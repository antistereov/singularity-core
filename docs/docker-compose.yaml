services:
  singularity-demo:
    container_name: singularity_demo
    image: singularity-demo:latest
    depends_on:
      - singularity-demo-mongo
      - singularity-demo-redis
    env_file:
      - .env
    environment:
      MONGO_DB_HOST: singularity-demo-mongo
      REDIS_HOST: singularity-demo-redis
      UI_BASE_URL: https://singularity.stereov.io
    networks:
      - default_network
    deploy:
      replicas: 1
      update_config:
        order: start-first

  singularity-demo-mongo:
    container_name: singularity-demo-mongo
    restart: unless-stopped
    image: mongodb/mongodb-community-server:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: singularity
      MONGO_INITDB_ROOT_PASSWORD: singularity
    networks:
      - default_network
    deploy:
      replicas: 1
      update_config:
        order: start-first
    healthcheck:
      test: ["CMD", "mongosh", "mongodb://singularity:singularity@localhost:27017", "--quiet", "--eval", "db.runCommand({ ping: 1 }).ok"]
      interval: 30s
      timeout: 10s
      retries: 3

  singularity-demo-redis:
    container_name: singularity-demo-redis
    restart: unless-stopped
    image: redis:8.2.0
    command: ["CMD", "redis-server", "--requirepass", "singularity" ]
    networks:
      - default_network
    deploy:
      replicas: 1
      update_config:
        order: start-first
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "singularity", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  singularity-docusaurus:
    container_name: singularity-docusaurus
    restart: unless-stopped
    image: singularity-docusaurus:latest
    networks:
      - default_network
    deploy:
      replicas: 1
      update_config:
        order: start-first
    healthcheck:
      test: ["CMD", "curl", "http://localhost:3000"]

networks:
  default_network:
    external: true